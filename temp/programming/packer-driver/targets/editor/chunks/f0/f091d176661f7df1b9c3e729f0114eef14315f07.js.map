{"version":3,"sources":["file:///Users/longbow/node_modules/lodash/_baseToString.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","_req2","url","define","exports","require","module","__filename","__dirname","Symbol","arrayMap","isArray","isSymbol","INFINITY","symbolProto","prototype","undefined","symbolToString","toString","baseToString","value","call","result","_cjsExports"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;AACkBC,MAAAA,I,iBAAhBC,Y;;AACgBC,MAAAA,K,iBAAhBD,Y;;AACgBE,MAAAA,K,iBAAhBF,Y;;AACgBG,MAAAA,K,iBAAhBH,Y;;;8BAEHA,Y,GAAe,cAAYI,G;;AACjCN,MAAAA,UAAU,CAACO,MAAX,CAAkBL,YAAlB,EAAgC,UAAUM,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;AAGC,YAAIC,MAAM,GAAGJ,OAAO,CAAC,WAAD,CAApB;AAAA,YACIK,QAAQ,GAAGL,OAAO,CAAC,aAAD,CADtB;AAAA,YAEIM,OAAO,GAAGN,OAAO,CAAC,WAAD,CAFrB;AAAA,YAGIO,QAAQ,GAAGP,OAAO,CAAC,YAAD,CAHtB;AAKA;;;AACA,YAAIQ,QAAQ,GAAG,IAAI,CAAnB;AAEA;;AACA,YAAIC,WAAW,GAAGL,MAAM,GAAGA,MAAM,CAACM,SAAV,GAAsBC,SAA9C;AAAA,YACIC,cAAc,GAAGH,WAAW,GAAGA,WAAW,CAACI,QAAf,GAA0BF,SAD1D;AAGA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,iBAASG,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B;AACA,cAAI,OAAOA,KAAP,IAAgB,QAApB,EAA8B;AAC5B,mBAAOA,KAAP;AACD;;AACD,cAAIT,OAAO,CAACS,KAAD,CAAX,EAAoB;AAClB;AACA,mBAAOV,QAAQ,CAACU,KAAD,EAAQD,YAAR,CAAR,GAAgC,EAAvC;AACD;;AACD,cAAIP,QAAQ,CAACQ,KAAD,CAAZ,EAAqB;AACnB,mBAAOH,cAAc,GAAGA,cAAc,CAACI,IAAf,CAAoBD,KAApB,CAAH,GAAgC,EAArD;AACD;;AACD,cAAIE,MAAM,GAAIF,KAAK,GAAG,EAAtB;AACA,iBAAQE,MAAM,IAAI,GAAV,IAAkB,IAAIF,KAAL,IAAe,CAACP,QAAlC,GAA8C,IAA9C,GAAqDS,MAA5D;AACD;;AAEDhB,QAAAA,MAAM,CAACF,OAAP,GAAiBe,YAAjB,CAxC0F,CA2C3F;;AAEA,2BAAAI,WAAW,GAAGjB,MAAM,CAACF,OAArB;AAGC,OAhDD,EAgDG,OAAO;AACR,qBAAaP,IADL;AAER,uBAAeE,KAFP;AAGR,qBAAaC,KAHL;AAIR,sBAAcC;AAJN,OAAP,CAhDH","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from './_Symbol';\nimport { __cjsMetaURL as _req0} from './_arrayMap';\nimport { __cjsMetaURL as _req1} from './isArray';\nimport { __cjsMetaURL as _req2} from './isSymbol';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n var Symbol = require('./_Symbol'),\n     arrayMap = require('./_arrayMap'),\n     isArray = require('./isArray'),\n     isSymbol = require('./isSymbol');\n\n /** Used as references for various `Number` constants. */\n var INFINITY = 1 / 0;\n\n /** Used to convert symbols to primitives and strings. */\n var symbolProto = Symbol ? Symbol.prototype : undefined,\n     symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n /**\n  * The base implementation of `_.toString` which doesn't convert nullish\n  * values to empty strings.\n  *\n  * @private\n  * @param {*} value The value to process.\n  * @returns {string} Returns the string.\n  */\n function baseToString(value) {\n   // Exit early for strings to avoid a performance hit in some environments.\n   if (typeof value == 'string') {\n     return value;\n   }\n   if (isArray(value)) {\n     // Recursively convert values (susceptible to call stack limits).\n     return arrayMap(value, baseToString) + '';\n   }\n   if (isSymbol(value)) {\n     return symbolToString ? symbolToString.call(value) : '';\n   }\n   var result = (value + '');\n   return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n }\n\n module.exports = baseToString;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  './_Symbol': _req,\n  './_arrayMap': _req0,\n  './isArray': _req1,\n  './isSymbol': _req2,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}