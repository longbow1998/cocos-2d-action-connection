{"version":3,"sources":["file:///Users/longbow/node_modules/lodash/_equalArrays.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","url","define","exports","require","module","__filename","__dirname","SetCache","arraySome","cacheHas","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalArrays","array","other","bitmask","customizer","equalFunc","stack","isPartial","arrLength","length","othLength","arrStacked","get","othStacked","index","result","seen","undefined","set","arrValue","othValue","compared","othIndex","push","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from './_SetCache';\nimport { __cjsMetaURL as _req0} from './_arraySome';\nimport { __cjsMetaURL as _req1} from './_cacheHas';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n var SetCache = require('./_SetCache'),\n     arraySome = require('./_arraySome'),\n     cacheHas = require('./_cacheHas');\n\n /** Used to compose bitmasks for value comparisons. */\n var COMPARE_PARTIAL_FLAG = 1,\n     COMPARE_UNORDERED_FLAG = 2;\n\n /**\n  * A specialized version of `baseIsEqualDeep` for arrays with support for\n  * partial deep comparisons.\n  *\n  * @private\n  * @param {Array} array The array to compare.\n  * @param {Array} other The other array to compare.\n  * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n  * @param {Function} customizer The function to customize comparisons.\n  * @param {Function} equalFunc The function to determine equivalents of values.\n  * @param {Object} stack Tracks traversed `array` and `other` objects.\n  * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n  */\n function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n   var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n       arrLength = array.length,\n       othLength = other.length;\n\n   if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n     return false;\n   }\n   // Check that cyclic values are equal.\n   var arrStacked = stack.get(array);\n   var othStacked = stack.get(other);\n   if (arrStacked && othStacked) {\n     return arrStacked == other && othStacked == array;\n   }\n   var index = -1,\n       result = true,\n       seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n   stack.set(array, other);\n   stack.set(other, array);\n\n   // Ignore non-index properties.\n   while (++index < arrLength) {\n     var arrValue = array[index],\n         othValue = other[index];\n\n     if (customizer) {\n       var compared = isPartial\n         ? customizer(othValue, arrValue, index, other, array, stack)\n         : customizer(arrValue, othValue, index, array, other, stack);\n     }\n     if (compared !== undefined) {\n       if (compared) {\n         continue;\n       }\n       result = false;\n       break;\n     }\n     // Recursively compare arrays (susceptible to call stack limits).\n     if (seen) {\n       if (!arraySome(other, function(othValue, othIndex) {\n             if (!cacheHas(seen, othIndex) &&\n                 (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n               return seen.push(othIndex);\n             }\n           })) {\n         result = false;\n         break;\n       }\n     } else if (!(\n           arrValue === othValue ||\n             equalFunc(arrValue, othValue, bitmask, customizer, stack)\n         )) {\n       result = false;\n       break;\n     }\n   }\n   stack['delete'](array);\n   stack['delete'](other);\n   return result;\n }\n\n module.exports = equalArrays;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  './_SetCache': _req,\n  './_arraySome': _req0,\n  './_cacheHas': _req1,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}