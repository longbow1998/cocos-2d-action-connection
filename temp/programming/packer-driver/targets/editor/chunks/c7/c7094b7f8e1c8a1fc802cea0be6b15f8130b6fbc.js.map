{"version":3,"sources":["file:///Users/longbow/node_modules/lodash/_listCacheDelete.js"],"names":["_cjsLoader","_req","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","assocIndexOf","arrayProto","Array","prototype","splice","listCacheDelete","key","data","__data__","index","lastIndex","length","pop","call","size","_cjsExports"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;AACkBC,MAAAA,I,iBAAhBC,Y;;;8BAEHA,Y,GAAe,cAAYC,G;;AACjCH,MAAAA,UAAU,CAACI,MAAX,CAAkBF,YAAlB,EAAgC,UAAUG,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;AAGC,YAAIC,YAAY,GAAGJ,OAAO,CAAC,iBAAD,CAA1B;AAEA;;;AACA,YAAIK,UAAU,GAAGC,KAAK,CAACC,SAAvB;AAEA;;AACA,YAAIC,MAAM,GAAGH,UAAU,CAACG,MAAxB;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,iBAASC,eAAT,CAAyBC,GAAzB,EAA8B;AAC5B,cAAIC,IAAI,GAAG,KAAKC,QAAhB;AAAA,cACIC,KAAK,GAAGT,YAAY,CAACO,IAAD,EAAOD,GAAP,CADxB;;AAGA,cAAIG,KAAK,GAAG,CAAZ,EAAe;AACb,mBAAO,KAAP;AACD;;AACD,cAAIC,SAAS,GAAGH,IAAI,CAACI,MAAL,GAAc,CAA9B;;AACA,cAAIF,KAAK,IAAIC,SAAb,EAAwB;AACtBH,YAAAA,IAAI,CAACK,GAAL;AACD,WAFD,MAEO;AACLR,YAAAA,MAAM,CAACS,IAAP,CAAYN,IAAZ,EAAkBE,KAAlB,EAAyB,CAAzB;AACD;;AACD,YAAE,KAAKK,IAAP;AACA,iBAAO,IAAP;AACD;;AAEDjB,QAAAA,MAAM,CAACF,OAAP,GAAiBU,eAAjB,CAtC0F,CAyC3F;;AAEA,2BAAAU,WAAW,GAAGlB,MAAM,CAACF,OAArB;AAGC,OA9CD,EA8CG,OAAO;AACR,2BAAmBJ;AADX,OAAP,CA9CH","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from './_assocIndexOf';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n var assocIndexOf = require('./_assocIndexOf');\n\n /** Used for built-in method references. */\n var arrayProto = Array.prototype;\n\n /** Built-in value references. */\n var splice = arrayProto.splice;\n\n /**\n  * Removes `key` and its value from the list cache.\n  *\n  * @private\n  * @name delete\n  * @memberOf ListCache\n  * @param {string} key The key of the value to remove.\n  * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n  */\n function listCacheDelete(key) {\n   var data = this.__data__,\n       index = assocIndexOf(data, key);\n\n   if (index < 0) {\n     return false;\n   }\n   var lastIndex = data.length - 1;\n   if (index == lastIndex) {\n     data.pop();\n   } else {\n     splice.call(data, index, 1);\n   }\n   --this.size;\n   return true;\n }\n\n module.exports = listCacheDelete;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  './_assocIndexOf': _req,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}