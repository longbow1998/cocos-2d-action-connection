{"version":3,"sources":["file:///Users/longbow/node_modules/lodash/_castSlice.js"],"names":["_cjsLoader","_req","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","baseSlice","castSlice","array","start","end","length","undefined","_cjsExports"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;AACkBC,MAAAA,I,iBAAhBC,Y;;;8BAEHA,Y,GAAe,cAAYC,G;;AACjCH,MAAAA,UAAU,CAACI,MAAX,CAAkBF,YAAlB,EAAgC,UAAUG,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;AAGC,YAAIC,SAAS,GAAGJ,OAAO,CAAC,cAAD,CAAvB;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACC,iBAASK,SAAT,CAAmBC,KAAnB,EAA0BC,KAA1B,EAAiCC,GAAjC,EAAsC;AACpC,cAAIC,MAAM,GAAGH,KAAK,CAACG,MAAnB;AACAD,UAAAA,GAAG,GAAGA,GAAG,KAAKE,SAAR,GAAoBD,MAApB,GAA6BD,GAAnC;AACA,iBAAQ,CAACD,KAAD,IAAUC,GAAG,IAAIC,MAAlB,GAA4BH,KAA5B,GAAoCF,SAAS,CAACE,KAAD,EAAQC,KAAR,EAAeC,GAAf,CAApD;AACD;;AAEDP,QAAAA,MAAM,CAACF,OAAP,GAAiBM,SAAjB,CArB0F,CAwB3F;;AAEA,2BAAAM,WAAW,GAAGV,MAAM,CAACF,OAArB;AAGC,OA7BD,EA6BG,OAAO;AACR,wBAAgBJ;AADR,OAAP,CA7BH","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from './_baseSlice';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n var baseSlice = require('./_baseSlice');\n\n /**\n  * Casts `array` to a slice if it's needed.\n  *\n  * @private\n  * @param {Array} array The array to inspect.\n  * @param {number} start The start position.\n  * @param {number} [end=array.length] The end position.\n  * @returns {Array} Returns the cast slice.\n  */\n function castSlice(array, start, end) {\n   var length = array.length;\n   end = end === undefined ? length : end;\n   return (!start && end >= length) ? array : baseSlice(array, start, end);\n }\n\n module.exports = castSlice;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  './_baseSlice': _req,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}