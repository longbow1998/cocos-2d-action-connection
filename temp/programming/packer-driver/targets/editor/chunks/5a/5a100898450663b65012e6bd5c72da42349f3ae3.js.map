{"version":3,"sources":["file:///Users/longbow/node_modules/rc-overflow/lib/hooks/useBatchFrameState.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","_req2","_req3","url","define","exports","require","module","__filename","__dirname","_interopRequireDefault","Object","defineProperty","value","useBatchFrameState","_slicedToArray2","_react","_raf","_useState3","_useState","default","_useState2","forceUpdate","statesRef","useRef","walkingIndex","beforeFrameId","createState","defaultValue","myIndex","current","length","setValue","val","cancel","_cjsExports","___esModule","__esModule","_useBatchFrameState"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from '@babel/runtime/helpers/interopRequireDefault';\nimport { __cjsMetaURL as _req0} from '@babel/runtime/helpers/slicedToArray';\nimport { __cjsMetaURL as _req1} from 'react';\nimport { __cjsMetaURL as _req2} from 'rc-util/lib/raf';\nimport { __cjsMetaURL as _req3} from 'rc-util/lib/hooks/useState';\nlet _cjsExports;\nlet ___esModule;\nlet _useBatchFrameState;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n \"use strict\";\n\n var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\n Object.defineProperty(exports, \"__esModule\", {\n   value: true\n });\n exports.useBatchFrameState = useBatchFrameState;\n\n var _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\n var _react = require(\"react\");\n\n var _raf = _interopRequireDefault(require(\"rc-util/lib/raf\"));\n\n var _useState3 = _interopRequireDefault(require(\"rc-util/lib/hooks/useState\"));\n\n /**\n  * State generate. Return a `setState` but it will flush all state with one render to save perf.\n  * This is not a realization of `unstable_batchedUpdates`.\n  */\n function useBatchFrameState() {\n   var _useState = (0, _useState3.default)({}),\n       _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n       forceUpdate = _useState2[1];\n\n   var statesRef = (0, _react.useRef)([]);\n   var walkingIndex = 0;\n   var beforeFrameId = 0;\n\n   function createState(defaultValue) {\n     var myIndex = walkingIndex;\n     walkingIndex += 1; // Fill value if not exist yet\n\n     if (statesRef.current.length < myIndex + 1) {\n       statesRef.current[myIndex] = defaultValue;\n     } // Return filled as `setState`\n\n\n     var value = statesRef.current[myIndex];\n\n     function setValue(val) {\n       statesRef.current[myIndex] = typeof val === 'function' ? val(statesRef.current[myIndex]) : val;\n\n       _raf.default.cancel(beforeFrameId); // Flush with batch\n\n\n       beforeFrameId = (0, _raf.default)(function () {\n         forceUpdate({}, true);\n       });\n     }\n\n     return [value, setValue];\n   }\n\n   return createState;\n }\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n___esModule = module.exports.__esModule;\n_useBatchFrameState = module.exports.useBatchFrameState;\n\n}, () => ({\n  '@babel/runtime/helpers/interopRequireDefault': _req,\n  '@babel/runtime/helpers/slicedToArray': _req0,\n  'react': _req1,\n  'rc-util/lib/raf': _req2,\n  'rc-util/lib/hooks/useState': _req3,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}