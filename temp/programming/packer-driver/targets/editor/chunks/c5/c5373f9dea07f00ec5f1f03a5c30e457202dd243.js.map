{"version":3,"sources":["file:///Users/longbow/node_modules/lodash/_baseIsEqual.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","url","define","exports","require","module","__filename","__dirname","baseIsEqualDeep","isObjectLike","baseIsEqual","value","other","bitmask","customizer","stack","_cjsExports"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;AACkBC,MAAAA,I,iBAAhBC,Y;;AACgBC,MAAAA,K,iBAAhBD,Y;;;8BAEHA,Y,GAAe,cAAYE,G;;AACjCJ,MAAAA,UAAU,CAACK,MAAX,CAAkBH,YAAlB,EAAgC,UAAUI,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;AAGC,YAAIC,eAAe,GAAGJ,OAAO,CAAC,oBAAD,CAA7B;AAAA,YACIK,YAAY,GAAGL,OAAO,CAAC,gBAAD,CAD1B;AAGA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACC,iBAASM,WAAT,CAAqBC,KAArB,EAA4BC,KAA5B,EAAmCC,OAAnC,EAA4CC,UAA5C,EAAwDC,KAAxD,EAA+D;AAC7D,cAAIJ,KAAK,KAAKC,KAAd,EAAqB;AACnB,mBAAO,IAAP;AACD;;AACD,cAAID,KAAK,IAAI,IAAT,IAAiBC,KAAK,IAAI,IAA1B,IAAmC,CAACH,YAAY,CAACE,KAAD,CAAb,IAAwB,CAACF,YAAY,CAACG,KAAD,CAA5E,EAAsF;AACpF,mBAAOD,KAAK,KAAKA,KAAV,IAAmBC,KAAK,KAAKA,KAApC;AACD;;AACD,iBAAOJ,eAAe,CAACG,KAAD,EAAQC,KAAR,EAAeC,OAAf,EAAwBC,UAAxB,EAAoCJ,WAApC,EAAiDK,KAAjD,CAAtB;AACD;;AAEDV,QAAAA,MAAM,CAACF,OAAP,GAAiBO,WAAjB,CA/B0F,CAkC3F;;AAEA,2BAAAM,WAAW,GAAGX,MAAM,CAACF,OAArB;AAGC,OAvCD,EAuCG,OAAO;AACR,8BAAsBL,IADd;AAER,0BAAkBE;AAFV,OAAP,CAvCH","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from './_baseIsEqualDeep';\nimport { __cjsMetaURL as _req0} from './isObjectLike';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n     isObjectLike = require('./isObjectLike');\n\n /**\n  * The base implementation of `_.isEqual` which supports partial comparisons\n  * and tracks traversed objects.\n  *\n  * @private\n  * @param {*} value The value to compare.\n  * @param {*} other The other value to compare.\n  * @param {boolean} bitmask The bitmask flags.\n  *  1 - Unordered comparison\n  *  2 - Partial comparison\n  * @param {Function} [customizer] The function to customize comparisons.\n  * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n  * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n  */\n function baseIsEqual(value, other, bitmask, customizer, stack) {\n   if (value === other) {\n     return true;\n   }\n   if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n     return value !== value && other !== other;\n   }\n   return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n }\n\n module.exports = baseIsEqual;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  './_baseIsEqualDeep': _req,\n  './isObjectLike': _req0,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}