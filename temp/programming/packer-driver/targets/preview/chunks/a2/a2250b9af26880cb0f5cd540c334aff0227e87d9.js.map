{"version":3,"sources":["file:///Users/longbow/node_modules/rc-tree/lib/utils/treeUtil.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","_req2","_req3","_req4","_req5","_req6","_req7","url","define","exports","require","module","__filename","__dirname","_interopRequireDefault","Object","defineProperty","value","convertDataToEntities","convertNodePropsToEventData","convertTreeToData","fillFieldNames","flattenTreeData","getKey","getTreeNodeProps","traverseDataNodes","warningWithoutKey","_typeof2","_toConsumableArray2","_objectSpread2","_objectWithoutProperties2","_omit","_toArray","_warning","_util","_excluded","key","pos","undefined","fieldNames","_ref","title","_title","children","mergedTitle","treeData","keys","Map","dig","list","path","arguments","length","forEach","treeNode","default","concat","recordKey","String","has","set","rootNodes","node","treeNodes","map","isTreeNode","_treeNode$props","props","rest","dataNode","parsedChildren","filter","treeNodeList","expandedKeys","_fillFieldNames","fieldTitles","fieldKey","fieldChildren","expandedKeySet","Set","flattenList","parent","index","getPosition","mergedKey","i","fieldTitle","flattenNode","data","isStart","isEnd","push","dataNodes","callback","config","mergedConfig","externalGetKey","_mergedConfig","childrenPropName","_fillFieldNames2","mergeChildrenPropName","syntheticGetKey","processNode","pathNodes","connectNodes","parentPos","level","nodes","subNode","subIndex","_ref2","initWrapper","processEntity","onProcessFinished","legacyExternalGetKey","mergedExternalGetKey","posEntities","keyEntities","wrapper","item","entity","_ref3","selectedKeys","loadedKeys","loadingKeys","checkedKeys","halfCheckedKeys","dragOverNodeKey","dropPosition","treeNodeProps","eventKey","expanded","indexOf","selected","loaded","loading","checked","halfChecked","dragOver","dragOverGapTop","dragOverGapBottom","active","eventData","get","_cjsExports","___esModule","__esModule","_convertDataToEntities","_convertNodePropsToEventData","_convertTreeToData","_fillFieldNames0","_flattenTreeData","_getKey","_getTreeNodeProps","_traverseDataNodes","_warningWithoutKey"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;AACkBC,MAAAA,I,6CAAhBC,Y;;AACgBC,MAAAA,K,8BAAhBD,Y;;AACgBE,MAAAA,K,yCAAhBF,Y;;AACgBG,MAAAA,K,oCAAhBH,Y;;AACgBI,MAAAA,K,+CAAhBJ,Y;;AACgBK,MAAAA,K,kBAAhBL,Y;;AACgBM,MAAAA,K,6BAAhBN,Y;;AACgBO,MAAAA,K,qBAAhBP,Y;;AACgBQ,MAAAA,K,iBAAhBR,Y;;;8BAYHA,Y,GAAe,cAAYS,G;;AACjCX,MAAAA,UAAU,CAACY,MAAX,CAAkBV,YAAlB,EAAgC,UAAUW,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;AAGC;;AAEA,YAAIC,sBAAsB,GAAGJ,OAAO,CAAC,8CAAD,CAApC;;AACAK,QAAAA,MAAM,CAACC,cAAP,CAAsBP,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CQ,UAAAA,KAAK,EAAE;AADoC,SAA7C;AAGAR,QAAAA,OAAO,CAACS,qBAAR,GAAgCA,qBAAhC;AACAT,QAAAA,OAAO,CAACU,2BAAR,GAAsCA,2BAAtC;AACAV,QAAAA,OAAO,CAACW,iBAAR,GAA4BA,iBAA5B;AACAX,QAAAA,OAAO,CAACY,cAAR,GAAyBA,cAAzB;AACAZ,QAAAA,OAAO,CAACa,eAAR,GAA0BA,eAA1B;AACAb,QAAAA,OAAO,CAACc,MAAR,GAAiBA,MAAjB;AACAd,QAAAA,OAAO,CAACe,gBAAR,GAA2BA,gBAA3B;AACAf,QAAAA,OAAO,CAACgB,iBAAR,GAA4BA,iBAA5B;AACAhB,QAAAA,OAAO,CAACiB,iBAAR,GAA4BA,iBAA5B;;AACA,YAAIC,QAAQ,GAAGb,sBAAsB,CAACJ,OAAO,CAAC,+BAAD,CAAR,CAArC;;AACA,YAAIkB,mBAAmB,GAAGd,sBAAsB,CAACJ,OAAO,CAAC,0CAAD,CAAR,CAAhD;;AACA,YAAImB,cAAc,GAAGf,sBAAsB,CAACJ,OAAO,CAAC,sCAAD,CAAR,CAA3C;;AACA,YAAIoB,yBAAyB,GAAGhB,sBAAsB,CAACJ,OAAO,CAAC,gDAAD,CAAR,CAAtD;;AACA,YAAIqB,KAAK,GAAGjB,sBAAsB,CAACJ,OAAO,CAAC,kBAAD,CAAR,CAAlC;;AACA,YAAIsB,QAAQ,GAAGlB,sBAAsB,CAACJ,OAAO,CAAC,8BAAD,CAAR,CAArC;;AACA,YAAIuB,QAAQ,GAAGnB,sBAAsB,CAACJ,OAAO,CAAC,qBAAD,CAAR,CAArC;;AACA,YAAIwB,KAAK,GAAGxB,OAAO,CAAC,SAAD,CAAnB;;AACA,YAAIyB,SAAS,GAAG,CAAC,UAAD,CAAhB;;AACA,iBAASZ,MAAT,CAAgBa,GAAhB,EAAqBC,GAArB,EAA0B;AACxB,cAAID,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKE,SAA5B,EAAuC;AACrC,mBAAOF,GAAP;AACD;;AACD,iBAAOC,GAAP;AACD;;AACD,iBAAShB,cAAT,CAAwBkB,UAAxB,EAAoC;AAClC,cAAIC,IAAI,GAAGD,UAAU,IAAI,EAAzB;AAAA,cACEE,KAAK,GAAGD,IAAI,CAACC,KADf;AAAA,cAEEC,MAAM,GAAGF,IAAI,CAACE,MAFhB;AAAA,cAGEN,GAAG,GAAGI,IAAI,CAACJ,GAHb;AAAA,cAIEO,QAAQ,GAAGH,IAAI,CAACG,QAJlB;;AAKA,cAAIC,WAAW,GAAGH,KAAK,IAAI,OAA3B;AACA,iBAAO;AACLA,YAAAA,KAAK,EAAEG,WADF;AAELF,YAAAA,MAAM,EAAEA,MAAM,IAAI,CAACE,WAAD,CAFb;AAGLR,YAAAA,GAAG,EAAEA,GAAG,IAAI,KAHP;AAILO,YAAAA,QAAQ,EAAEA,QAAQ,IAAI;AAJjB,WAAP;AAMD;AACD;AACD;AACA;;;AACC,iBAASjB,iBAAT,CAA2BmB,QAA3B,EAAqCN,UAArC,EAAiD;AAC/C,cAAIO,IAAI,GAAG,IAAIC,GAAJ,EAAX;;AACA,mBAASC,GAAT,CAAaC,IAAb,EAAmB;AACjB,gBAAIC,IAAI,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBb,SAAzC,GAAqDa,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA/E;AACA,aAACF,IAAI,IAAI,EAAT,EAAaI,OAAb,CAAqB,UAAUC,QAAV,EAAoB;AACvC,kBAAIlB,GAAG,GAAGkB,QAAQ,CAACf,UAAU,CAACH,GAAZ,CAAlB;AACA,kBAAIO,QAAQ,GAAGW,QAAQ,CAACf,UAAU,CAACI,QAAZ,CAAvB;AACA,eAAC,GAAGV,QAAQ,CAACsB,OAAb,EAAsBnB,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKE,SAA9C,EAAyD,uCAAuCkB,MAAvC,CAA8CN,IAA9C,EAAoDM,MAApD,CAA2DpB,GAA3D,EAAgE,GAAhE,CAAzD;AACA,kBAAIqB,SAAS,GAAGC,MAAM,CAACtB,GAAD,CAAtB;AACA,eAAC,GAAGH,QAAQ,CAACsB,OAAb,EAAsB,CAACT,IAAI,CAACa,GAAL,CAASF,SAAT,CAAD,IAAwBrB,GAAG,KAAK,IAAhC,IAAwCA,GAAG,KAAKE,SAAtE,EAAiF,iCAAiCkB,MAAjC,CAAwCC,SAAxC,CAAjF;AACAX,cAAAA,IAAI,CAACc,GAAL,CAASH,SAAT,EAAoB,IAApB;AACAT,cAAAA,GAAG,CAACL,QAAD,EAAW,GAAGa,MAAH,CAAUN,IAAV,EAAgBM,MAAhB,CAAuBC,SAAvB,EAAkC,KAAlC,CAAX,CAAH;AACD,aARD;AASD;;AACDT,UAAAA,GAAG,CAACH,QAAD,CAAH;AACD;AACD;AACD;AACA;;;AACC,iBAASzB,iBAAT,CAA2ByC,SAA3B,EAAsC;AACpC,mBAASb,GAAT,CAAac,IAAb,EAAmB;AACjB,gBAAIC,SAAS,GAAG,CAAC,GAAG/B,QAAQ,CAACuB,OAAb,EAAsBO,IAAtB,CAAhB;AACA,mBAAOC,SAAS,CAACC,GAAV,CAAc,UAAUV,QAAV,EAAoB;AACvC;AACA,kBAAI,CAAC,CAAC,GAAGpB,KAAK,CAAC+B,UAAV,EAAsBX,QAAtB,CAAL,EAAsC;AACpC,iBAAC,GAAGrB,QAAQ,CAACsB,OAAb,EAAsB,CAACD,QAAvB,EAAiC,qDAAjC;AACA,uBAAO,IAAP;AACD;;AACD,kBAAIlB,GAAG,GAAGkB,QAAQ,CAAClB,GAAnB;AACA,kBAAI8B,eAAe,GAAGZ,QAAQ,CAACa,KAA/B;AAAA,kBACExB,QAAQ,GAAGuB,eAAe,CAACvB,QAD7B;AAAA,kBAEEyB,IAAI,GAAG,CAAC,GAAGtC,yBAAyB,CAACyB,OAA9B,EAAuCW,eAAvC,EAAwD/B,SAAxD,CAFT;AAGA,kBAAIkC,QAAQ,GAAG,CAAC,GAAGxC,cAAc,CAAC0B,OAAnB,EAA4B;AACzCnB,gBAAAA,GAAG,EAAEA;AADoC,eAA5B,EAEZgC,IAFY,CAAf;AAGA,kBAAIE,cAAc,GAAGtB,GAAG,CAACL,QAAD,CAAxB;;AACA,kBAAI2B,cAAc,CAAClB,MAAnB,EAA2B;AACzBiB,gBAAAA,QAAQ,CAAC1B,QAAT,GAAoB2B,cAApB;AACD;;AACD,qBAAOD,QAAP;AACD,aAlBM,EAkBJE,MAlBI,CAkBG,UAAUF,QAAV,EAAoB;AAC5B,qBAAOA,QAAP;AACD,aApBM,CAAP;AAqBD;;AACD,iBAAOrB,GAAG,CAACa,SAAD,CAAV;AACD;AACD;AACD;AACA;AACA;AACA;AACA;;;AACC,iBAASvC,eAAT,CAAyBkD,YAAzB,EAAuCC,YAAvC,EAAqDlC,UAArD,EAAiE;AAC/D,cAAImC,eAAe,GAAGrD,cAAc,CAACkB,UAAD,CAApC;AAAA,cACEoC,WAAW,GAAGD,eAAe,CAAChC,MADhC;AAAA,cAEEkC,QAAQ,GAAGF,eAAe,CAACtC,GAF7B;AAAA,cAGEyC,aAAa,GAAGH,eAAe,CAAC/B,QAHlC;;AAIA,cAAImC,cAAc,GAAG,IAAIC,GAAJ,CAAQN,YAAY,KAAK,IAAjB,GAAwB,EAAxB,GAA6BA,YAArC,CAArB;AACA,cAAIO,WAAW,GAAG,EAAlB;;AACA,mBAAShC,GAAT,CAAaC,IAAb,EAAmB;AACjB,gBAAIgC,MAAM,GAAG9B,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBb,SAAzC,GAAqDa,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAAjF;AACA,mBAAOF,IAAI,CAACe,GAAL,CAAS,UAAUV,QAAV,EAAoB4B,KAApB,EAA2B;AACzC,kBAAI7C,GAAG,GAAG,CAAC,GAAGH,KAAK,CAACiD,WAAV,EAAuBF,MAAM,GAAGA,MAAM,CAAC5C,GAAV,GAAgB,GAA7C,EAAkD6C,KAAlD,CAAV;AACA,kBAAIE,SAAS,GAAG7D,MAAM,CAAC+B,QAAQ,CAACsB,QAAD,CAAT,EAAqBvC,GAArB,CAAtB,CAFyC,CAGzC;;AACA,kBAAIO,WAAJ;;AACA,mBAAK,IAAIyC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,WAAW,CAACvB,MAAhC,EAAwCiC,CAAC,IAAI,CAA7C,EAAgD;AAC9C,oBAAIC,UAAU,GAAGX,WAAW,CAACU,CAAD,CAA5B;;AACA,oBAAI/B,QAAQ,CAACgC,UAAD,CAAR,KAAyBhD,SAA7B,EAAwC;AACtCM,kBAAAA,WAAW,GAAGU,QAAQ,CAACgC,UAAD,CAAtB;AACA;AACD;AACF,eAXwC,CAYzC;;;AACA,kBAAIC,WAAW,GAAG,CAAC,GAAG1D,cAAc,CAAC0B,OAAnB,EAA4B,CAAC,GAAG1B,cAAc,CAAC0B,OAAnB,EAA4B,EAA5B,EAAgC,CAAC,GAAGxB,KAAK,CAACwB,OAAV,EAAmBD,QAAnB,EAA6B,GAAGE,MAAH,CAAU,CAAC,GAAG5B,mBAAmB,CAAC2B,OAAxB,EAAiCoB,WAAjC,CAAV,EAAyD,CAACC,QAAD,EAAWC,aAAX,CAAzD,CAA7B,CAAhC,CAA5B,EAAgL,EAAhL,EAAoL;AACpMpC,gBAAAA,KAAK,EAAEG,WAD6L;AAEpMR,gBAAAA,GAAG,EAAEgD,SAF+L;AAGpMH,gBAAAA,MAAM,EAAEA,MAH4L;AAIpM5C,gBAAAA,GAAG,EAAEA,GAJ+L;AAKpMM,gBAAAA,QAAQ,EAAE,IAL0L;AAMpM6C,gBAAAA,IAAI,EAAElC,QAN8L;AAOpMmC,gBAAAA,OAAO,EAAE,GAAGjC,MAAH,CAAU,CAAC,GAAG5B,mBAAmB,CAAC2B,OAAxB,EAAiC0B,MAAM,GAAGA,MAAM,CAACQ,OAAV,GAAoB,EAA3D,CAAV,EAA0E,CAACP,KAAK,KAAK,CAAX,CAA1E,CAP2L;AAQpMQ,gBAAAA,KAAK,EAAE,GAAGlC,MAAH,CAAU,CAAC,GAAG5B,mBAAmB,CAAC2B,OAAxB,EAAiC0B,MAAM,GAAGA,MAAM,CAACS,KAAV,GAAkB,EAAzD,CAAV,EAAwE,CAACR,KAAK,KAAKjC,IAAI,CAACG,MAAL,GAAc,CAAzB,CAAxE;AAR6L,eAApL,CAAlB;AAUA4B,cAAAA,WAAW,CAACW,IAAZ,CAAiBJ,WAAjB,EAvByC,CAwBzC;;AACA,kBAAId,YAAY,KAAK,IAAjB,IAAyBK,cAAc,CAACnB,GAAf,CAAmByB,SAAnB,CAA7B,EAA4D;AAC1DG,gBAAAA,WAAW,CAAC5C,QAAZ,GAAuBK,GAAG,CAACM,QAAQ,CAACuB,aAAD,CAAR,IAA2B,EAA5B,EAAgCU,WAAhC,CAA1B;AACD,eAFD,MAEO;AACLA,gBAAAA,WAAW,CAAC5C,QAAZ,GAAuB,EAAvB;AACD;;AACD,qBAAO4C,WAAP;AACD,aA/BM,CAAP;AAgCD;;AACDvC,UAAAA,GAAG,CAACwB,YAAD,CAAH;AACA,iBAAOQ,WAAP;AACD;AACD;AACD;AACA;AACA;;;AACC,iBAASvD,iBAAT,CAA2BmE,SAA3B,EAAsCC,QAAtC,EACA;AACAC,QAAAA,MAFA,EAEQ;AACN,cAAIC,YAAY,GAAG,EAAnB;;AACA,cAAI,CAAC,GAAGpE,QAAQ,CAAC4B,OAAb,EAAsBuC,MAAtB,MAAkC,QAAtC,EAAgD;AAC9CC,YAAAA,YAAY,GAAGD,MAAf;AACD,WAFD,MAEO;AACLC,YAAAA,YAAY,GAAG;AACbC,cAAAA,cAAc,EAAEF;AADH,aAAf;AAGD;;AACDC,UAAAA,YAAY,GAAGA,YAAY,IAAI,EAA/B,CATM,CAUN;;AACA,cAAIE,aAAa,GAAGF,YAApB;AAAA,cACEG,gBAAgB,GAAGD,aAAa,CAACC,gBADnC;AAAA,cAEEF,cAAc,GAAGC,aAAa,CAACD,cAFjC;AAAA,cAGEzD,UAAU,GAAG0D,aAAa,CAAC1D,UAH7B;;AAIA,cAAI4D,gBAAgB,GAAG9E,cAAc,CAACkB,UAAD,CAArC;AAAA,cACEqC,QAAQ,GAAGuB,gBAAgB,CAAC/D,GAD9B;AAAA,cAEEyC,aAAa,GAAGsB,gBAAgB,CAACxD,QAFnC;;AAGA,cAAIyD,qBAAqB,GAAGF,gBAAgB,IAAIrB,aAAhD,CAlBM,CAmBN;;AACA,cAAIwB,eAAJ;;AACA,cAAIL,cAAJ,EAAoB;AAClB,gBAAI,OAAOA,cAAP,KAA0B,QAA9B,EAAwC;AACtCK,cAAAA,eAAe,GAAG,SAASA,eAAT,CAAyBvC,IAAzB,EAA+B;AAC/C,uBAAOA,IAAI,CAACkC,cAAD,CAAX;AACD,eAFD;AAGD,aAJD,MAIO,IAAI,OAAOA,cAAP,KAA0B,UAA9B,EAA0C;AAC/CK,cAAAA,eAAe,GAAG,SAASA,eAAT,CAAyBvC,IAAzB,EAA+B;AAC/C,uBAAOkC,cAAc,CAAClC,IAAD,CAArB;AACD,eAFD;AAGD;AACF,WAVD,MAUO;AACLuC,YAAAA,eAAe,GAAG,SAASA,eAAT,CAAyBvC,IAAzB,EAA+BzB,GAA/B,EAAoC;AACpD,qBAAOd,MAAM,CAACuC,IAAI,CAACc,QAAD,CAAL,EAAiBvC,GAAjB,CAAb;AACD,aAFD;AAGD,WAnCK,CAoCN;;;AACA,mBAASiE,WAAT,CAAqBxC,IAArB,EAA2BoB,KAA3B,EAAkCD,MAAlC,EAA0CsB,SAA1C,EAAqD;AACnD,gBAAI5D,QAAQ,GAAGmB,IAAI,GAAGA,IAAI,CAACsC,qBAAD,CAAP,GAAiCR,SAApD;AACA,gBAAIvD,GAAG,GAAGyB,IAAI,GAAG,CAAC,GAAG5B,KAAK,CAACiD,WAAV,EAAuBF,MAAM,CAAC5C,GAA9B,EAAmC6C,KAAnC,CAAH,GAA+C,GAA7D;AACA,gBAAIsB,YAAY,GAAG1C,IAAI,GAAG,GAAGN,MAAH,CAAU,CAAC,GAAG5B,mBAAmB,CAAC2B,OAAxB,EAAiCgD,SAAjC,CAAV,EAAuD,CAACzC,IAAD,CAAvD,CAAH,GAAoE,EAA3F,CAHmD,CAInD;;AACA,gBAAIA,IAAJ,EAAU;AACR,kBAAI1B,GAAG,GAAGiE,eAAe,CAACvC,IAAD,EAAOzB,GAAP,CAAzB;AACA,kBAAImD,IAAI,GAAG;AACT1B,gBAAAA,IAAI,EAAEA,IADG;AAEToB,gBAAAA,KAAK,EAAEA,KAFE;AAGT7C,gBAAAA,GAAG,EAAEA,GAHI;AAITD,gBAAAA,GAAG,EAAEA,GAJI;AAKTqE,gBAAAA,SAAS,EAAExB,MAAM,CAACnB,IAAP,GAAcmB,MAAM,CAAC5C,GAArB,GAA2B,IAL7B;AAMTqE,gBAAAA,KAAK,EAAEzB,MAAM,CAACyB,KAAP,GAAe,CANb;AAOTC,gBAAAA,KAAK,EAAEH;AAPE,eAAX;AASAX,cAAAA,QAAQ,CAACL,IAAD,CAAR;AACD,aAjBkD,CAkBnD;;;AACA,gBAAI7C,QAAJ,EAAc;AACZA,cAAAA,QAAQ,CAACU,OAAT,CAAiB,UAAUuD,OAAV,EAAmBC,QAAnB,EAA6B;AAC5CP,gBAAAA,WAAW,CAACM,OAAD,EAAUC,QAAV,EAAoB;AAC7B/C,kBAAAA,IAAI,EAAEA,IADuB;AAE7BzB,kBAAAA,GAAG,EAAEA,GAFwB;AAG7BqE,kBAAAA,KAAK,EAAEzB,MAAM,GAAGA,MAAM,CAACyB,KAAP,GAAe,CAAlB,GAAsB,CAAC;AAHP,iBAApB,EAIRF,YAJQ,CAAX;AAKD,eAND;AAOD;AACF;;AACDF,UAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACD;AACD;AACA;;;AACC,iBAASpF,qBAAT,CAA+B0E,SAA/B,EAA0C;AACxC,cAAIkB,KAAK,GAAG3D,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBb,SAAzC,GAAqDa,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAhF;AAAA,cACE4D,WAAW,GAAGD,KAAK,CAACC,WADtB;AAAA,cAEEC,aAAa,GAAGF,KAAK,CAACE,aAFxB;AAAA,cAGEC,iBAAiB,GAAGH,KAAK,CAACG,iBAH5B;AAAA,cAIEjB,cAAc,GAAGc,KAAK,CAACd,cAJzB;AAAA,cAKEE,gBAAgB,GAAGY,KAAK,CAACZ,gBAL3B;AAAA,cAME3D,UAAU,GAAGuE,KAAK,CAACvE,UANrB;;AAOA;AAAI;AACJ2E,UAAAA,oBAAoB,GAAG/D,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBD,SAAS,CAAC,CAAD,CAAhC,GAAsCb,SAD7D,CARwC,CAUxC;;AACA,cAAI6E,oBAAoB,GAAGnB,cAAc,IAAIkB,oBAA7C;AACA,cAAIE,WAAW,GAAG,EAAlB;AACA,cAAIC,WAAW,GAAG,EAAlB;AACA,cAAIC,OAAO,GAAG;AACZF,YAAAA,WAAW,EAAEA,WADD;AAEZC,YAAAA,WAAW,EAAEA;AAFD,WAAd;;AAIA,cAAIN,WAAJ,EAAiB;AACfO,YAAAA,OAAO,GAAGP,WAAW,CAACO,OAAD,CAAX,IAAwBA,OAAlC;AACD;;AACD7F,UAAAA,iBAAiB,CAACmE,SAAD,EAAY,UAAU2B,IAAV,EAAgB;AAC3C,gBAAIzD,IAAI,GAAGyD,IAAI,CAACzD,IAAhB;AAAA,gBACEoB,KAAK,GAAGqC,IAAI,CAACrC,KADf;AAAA,gBAEE7C,GAAG,GAAGkF,IAAI,CAAClF,GAFb;AAAA,gBAGED,GAAG,GAAGmF,IAAI,CAACnF,GAHb;AAAA,gBAIEqE,SAAS,GAAGc,IAAI,CAACd,SAJnB;AAAA,gBAKEC,KAAK,GAAGa,IAAI,CAACb,KALf;AAAA,gBAMEC,KAAK,GAAGY,IAAI,CAACZ,KANf;AAOA,gBAAIa,MAAM,GAAG;AACX1D,cAAAA,IAAI,EAAEA,IADK;AAEX6C,cAAAA,KAAK,EAAEA,KAFI;AAGXzB,cAAAA,KAAK,EAAEA,KAHI;AAIX9C,cAAAA,GAAG,EAAEA,GAJM;AAKXC,cAAAA,GAAG,EAAEA,GALM;AAMXqE,cAAAA,KAAK,EAAEA;AANI,aAAb;AAQA,gBAAItB,SAAS,GAAG7D,MAAM,CAACa,GAAD,EAAMC,GAAN,CAAtB;AACA+E,YAAAA,WAAW,CAAC/E,GAAD,CAAX,GAAmBmF,MAAnB;AACAH,YAAAA,WAAW,CAACjC,SAAD,CAAX,GAAyBoC,MAAzB,CAlB2C,CAmB3C;;AACAA,YAAAA,MAAM,CAACvC,MAAP,GAAgBmC,WAAW,CAACX,SAAD,CAA3B;;AACA,gBAAIe,MAAM,CAACvC,MAAX,EAAmB;AACjBuC,cAAAA,MAAM,CAACvC,MAAP,CAActC,QAAd,GAAyB6E,MAAM,CAACvC,MAAP,CAActC,QAAd,IAA0B,EAAnD;AACA6E,cAAAA,MAAM,CAACvC,MAAP,CAActC,QAAd,CAAuBgD,IAAvB,CAA4B6B,MAA5B;AACD;;AACD,gBAAIR,aAAJ,EAAmB;AACjBA,cAAAA,aAAa,CAACQ,MAAD,EAASF,OAAT,CAAb;AACD;AACF,WA5BgB,EA4Bd;AACDtB,YAAAA,cAAc,EAAEmB,oBADf;AAEDjB,YAAAA,gBAAgB,EAAEA,gBAFjB;AAGD3D,YAAAA,UAAU,EAAEA;AAHX,WA5Bc,CAAjB;;AAiCA,cAAI0E,iBAAJ,EAAuB;AACrBA,YAAAA,iBAAiB,CAACK,OAAD,CAAjB;AACD;;AACD,iBAAOA,OAAP;AACD;AACD;AACD;AACA;;;AACC,iBAAS9F,gBAAT,CAA0BY,GAA1B,EAA+BqF,KAA/B,EAAsC;AACpC,cAAIhD,YAAY,GAAGgD,KAAK,CAAChD,YAAzB;AAAA,cACEiD,YAAY,GAAGD,KAAK,CAACC,YADvB;AAAA,cAEEC,UAAU,GAAGF,KAAK,CAACE,UAFrB;AAAA,cAGEC,WAAW,GAAGH,KAAK,CAACG,WAHtB;AAAA,cAIEC,WAAW,GAAGJ,KAAK,CAACI,WAJtB;AAAA,cAKEC,eAAe,GAAGL,KAAK,CAACK,eAL1B;AAAA,cAMEC,eAAe,GAAGN,KAAK,CAACM,eAN1B;AAAA,cAOEC,YAAY,GAAGP,KAAK,CAACO,YAPvB;AAAA,cAQEX,WAAW,GAAGI,KAAK,CAACJ,WARtB;AASA,cAAIG,MAAM,GAAGH,WAAW,CAACjF,GAAD,CAAxB;AACA,cAAI6F,aAAa,GAAG;AAClBC,YAAAA,QAAQ,EAAE9F,GADQ;AAElB+F,YAAAA,QAAQ,EAAE1D,YAAY,CAAC2D,OAAb,CAAqBhG,GAArB,MAA8B,CAAC,CAFvB;AAGlBiG,YAAAA,QAAQ,EAAEX,YAAY,CAACU,OAAb,CAAqBhG,GAArB,MAA8B,CAAC,CAHvB;AAIlBkG,YAAAA,MAAM,EAAEX,UAAU,CAACS,OAAX,CAAmBhG,GAAnB,MAA4B,CAAC,CAJnB;AAKlBmG,YAAAA,OAAO,EAAEX,WAAW,CAACQ,OAAZ,CAAoBhG,GAApB,MAA6B,CAAC,CALrB;AAMlBoG,YAAAA,OAAO,EAAEX,WAAW,CAACO,OAAZ,CAAoBhG,GAApB,MAA6B,CAAC,CANrB;AAOlBqG,YAAAA,WAAW,EAAEX,eAAe,CAACM,OAAhB,CAAwBhG,GAAxB,MAAiC,CAAC,CAP7B;AAQlBC,YAAAA,GAAG,EAAEqB,MAAM,CAAC8D,MAAM,GAAGA,MAAM,CAACnF,GAAV,GAAgB,EAAvB,CARO;AASlB;AACA;AACA;AACAqG,YAAAA,QAAQ,EAAEX,eAAe,KAAK3F,GAApB,IAA2B4F,YAAY,KAAK,CAZpC;AAalBW,YAAAA,cAAc,EAAEZ,eAAe,KAAK3F,GAApB,IAA2B4F,YAAY,KAAK,CAAC,CAb3C;AAclBY,YAAAA,iBAAiB,EAAEb,eAAe,KAAK3F,GAApB,IAA2B4F,YAAY,KAAK;AAd7C,WAApB;AAgBA,iBAAOC,aAAP;AACD;;AACD,iBAAS9G,2BAAT,CAAqCgD,KAArC,EAA4C;AAC1C,cAAIqB,IAAI,GAAGrB,KAAK,CAACqB,IAAjB;AAAA,cACE2C,QAAQ,GAAGhE,KAAK,CAACgE,QADnB;AAAA,cAEEE,QAAQ,GAAGlE,KAAK,CAACkE,QAFnB;AAAA,cAGEG,OAAO,GAAGrE,KAAK,CAACqE,OAHlB;AAAA,cAIEF,MAAM,GAAGnE,KAAK,CAACmE,MAJjB;AAAA,cAKEC,OAAO,GAAGpE,KAAK,CAACoE,OALlB;AAAA,cAMEE,WAAW,GAAGtE,KAAK,CAACsE,WANtB;AAAA,cAOEC,QAAQ,GAAGvE,KAAK,CAACuE,QAPnB;AAAA,cAQEC,cAAc,GAAGxE,KAAK,CAACwE,cARzB;AAAA,cASEC,iBAAiB,GAAGzE,KAAK,CAACyE,iBAT5B;AAAA,cAUEvG,GAAG,GAAG8B,KAAK,CAAC9B,GAVd;AAAA,cAWEwG,MAAM,GAAG1E,KAAK,CAAC0E,MAXjB;AAAA,cAYEX,QAAQ,GAAG/D,KAAK,CAAC+D,QAZnB;AAaA,cAAIY,SAAS,GAAG,CAAC,GAAGjH,cAAc,CAAC0B,OAAnB,EAA4B,CAAC,GAAG1B,cAAc,CAAC0B,OAAnB,EAA4B,EAA5B,EAAgCiC,IAAhC,CAA5B,EAAmE,EAAnE,EAAuE;AACrF2C,YAAAA,QAAQ,EAAEA,QAD2E;AAErFE,YAAAA,QAAQ,EAAEA,QAF2E;AAGrFG,YAAAA,OAAO,EAAEA,OAH4E;AAIrFF,YAAAA,MAAM,EAAEA,MAJ6E;AAKrFC,YAAAA,OAAO,EAAEA,OAL4E;AAMrFE,YAAAA,WAAW,EAAEA,WANwE;AAOrFC,YAAAA,QAAQ,EAAEA,QAP2E;AAQrFC,YAAAA,cAAc,EAAEA,cARqE;AASrFC,YAAAA,iBAAiB,EAAEA,iBATkE;AAUrFvG,YAAAA,GAAG,EAAEA,GAVgF;AAWrFwG,YAAAA,MAAM,EAAEA,MAX6E;AAYrFzG,YAAAA,GAAG,EAAE8F;AAZgF,WAAvE,CAAhB;;AAcA,cAAI,EAAE,WAAWY,SAAb,CAAJ,EAA6B;AAC3B/H,YAAAA,MAAM,CAACC,cAAP,CAAsB8H,SAAtB,EAAiC,OAAjC,EAA0C;AACxCC,cAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,iBAAC,GAAG9G,QAAQ,CAACsB,OAAb,EAAsB,KAAtB,EAA6B,uIAA7B;AACA,uBAAOY,KAAP;AACD;AAJuC,aAA1C;AAMD;;AACD,iBAAO2E,SAAP;AACD,SAjWyF,CAmW3F;;;AAEA,2BAAAE,WAAW,GAAGrI,MAAM,CAACF,OAArB;;AACAwI,QAAAA,WAAW,GAAGtI,MAAM,CAACF,OAAP,CAAeyI,UAA7B;AACAC,QAAAA,sBAAsB,GAAGxI,MAAM,CAACF,OAAP,CAAeS,qBAAxC;AACAkI,QAAAA,4BAA4B,GAAGzI,MAAM,CAACF,OAAP,CAAeU,2BAA9C;AACAkI,QAAAA,kBAAkB,GAAG1I,MAAM,CAACF,OAAP,CAAeW,iBAApC;AACAkI,QAAAA,gBAAgB,GAAG3I,MAAM,CAACF,OAAP,CAAeY,cAAlC;AACAkI,QAAAA,gBAAgB,GAAG5I,MAAM,CAACF,OAAP,CAAea,eAAlC;AACAkI,QAAAA,OAAO,GAAG7I,MAAM,CAACF,OAAP,CAAec,MAAzB;AACAkI,QAAAA,iBAAiB,GAAG9I,MAAM,CAACF,OAAP,CAAee,gBAAnC;AACAkI,QAAAA,kBAAkB,GAAG/I,MAAM,CAACF,OAAP,CAAegB,iBAApC;AACAkI,QAAAA,kBAAkB,GAAGhJ,MAAM,CAACF,OAAP,CAAeiB,iBAApC;AAEC,OAjXD,EAiXG,OAAO;AACR,wDAAgD7B,IADxC;AAER,yCAAiCE,KAFzB;AAGR,oDAA4CC,KAHpC;AAIR,gDAAwCC,KAJhC;AAKR,0DAAkDC,KAL1C;AAMR,4BAAoBC,KANZ;AAOR,wCAAgCC,KAPxB;AAQR,+BAAuBC,KARf;AASR,mBAAWC;AATH,OAAP,CAjXH","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from '@babel/runtime/helpers/interopRequireDefault';\nimport { __cjsMetaURL as _req0} from '@babel/runtime/helpers/typeof';\nimport { __cjsMetaURL as _req1} from '@babel/runtime/helpers/toConsumableArray';\nimport { __cjsMetaURL as _req2} from '@babel/runtime/helpers/objectSpread2';\nimport { __cjsMetaURL as _req3} from '@babel/runtime/helpers/objectWithoutProperties';\nimport { __cjsMetaURL as _req4} from 'rc-util/lib/omit';\nimport { __cjsMetaURL as _req5} from 'rc-util/lib/Children/toArray';\nimport { __cjsMetaURL as _req6} from 'rc-util/lib/warning';\nimport { __cjsMetaURL as _req7} from '../util';\nlet _cjsExports;\nlet ___esModule;\nlet _convertDataToEntities;\nlet _convertNodePropsToEventData;\nlet _convertTreeToData;\nlet _fillFieldNames0;\nlet _flattenTreeData;\nlet _getKey;\nlet _getTreeNodeProps;\nlet _traverseDataNodes;\nlet _warningWithoutKey;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n \"use strict\";\n\n var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n Object.defineProperty(exports, \"__esModule\", {\n   value: true\n });\n exports.convertDataToEntities = convertDataToEntities;\n exports.convertNodePropsToEventData = convertNodePropsToEventData;\n exports.convertTreeToData = convertTreeToData;\n exports.fillFieldNames = fillFieldNames;\n exports.flattenTreeData = flattenTreeData;\n exports.getKey = getKey;\n exports.getTreeNodeProps = getTreeNodeProps;\n exports.traverseDataNodes = traverseDataNodes;\n exports.warningWithoutKey = warningWithoutKey;\n var _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n var _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n var _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n var _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n var _omit = _interopRequireDefault(require(\"rc-util/lib/omit\"));\n var _toArray = _interopRequireDefault(require(\"rc-util/lib/Children/toArray\"));\n var _warning = _interopRequireDefault(require(\"rc-util/lib/warning\"));\n var _util = require(\"../util\");\n var _excluded = [\"children\"];\n function getKey(key, pos) {\n   if (key !== null && key !== undefined) {\n     return key;\n   }\n   return pos;\n }\n function fillFieldNames(fieldNames) {\n   var _ref = fieldNames || {},\n     title = _ref.title,\n     _title = _ref._title,\n     key = _ref.key,\n     children = _ref.children;\n   var mergedTitle = title || 'title';\n   return {\n     title: mergedTitle,\n     _title: _title || [mergedTitle],\n     key: key || 'key',\n     children: children || 'children'\n   };\n }\n /**\n  * Warning if TreeNode do not provides key\n  */\n function warningWithoutKey(treeData, fieldNames) {\n   var keys = new Map();\n   function dig(list) {\n     var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n     (list || []).forEach(function (treeNode) {\n       var key = treeNode[fieldNames.key];\n       var children = treeNode[fieldNames.children];\n       (0, _warning.default)(key !== null && key !== undefined, \"Tree node must have a certain key: [\".concat(path).concat(key, \"]\"));\n       var recordKey = String(key);\n       (0, _warning.default)(!keys.has(recordKey) || key === null || key === undefined, \"Same 'key' exist in the Tree: \".concat(recordKey));\n       keys.set(recordKey, true);\n       dig(children, \"\".concat(path).concat(recordKey, \" > \"));\n     });\n   }\n   dig(treeData);\n }\n /**\n  * Convert `children` of Tree into `treeData` structure.\n  */\n function convertTreeToData(rootNodes) {\n   function dig(node) {\n     var treeNodes = (0, _toArray.default)(node);\n     return treeNodes.map(function (treeNode) {\n       // Filter invalidate node\n       if (!(0, _util.isTreeNode)(treeNode)) {\n         (0, _warning.default)(!treeNode, 'Tree/TreeNode can only accept TreeNode as children.');\n         return null;\n       }\n       var key = treeNode.key;\n       var _treeNode$props = treeNode.props,\n         children = _treeNode$props.children,\n         rest = (0, _objectWithoutProperties2.default)(_treeNode$props, _excluded);\n       var dataNode = (0, _objectSpread2.default)({\n         key: key\n       }, rest);\n       var parsedChildren = dig(children);\n       if (parsedChildren.length) {\n         dataNode.children = parsedChildren;\n       }\n       return dataNode;\n     }).filter(function (dataNode) {\n       return dataNode;\n     });\n   }\n   return dig(rootNodes);\n }\n /**\n  * Flat nest tree data into flatten list. This is used for virtual list render.\n  * @param treeNodeList Origin data node list\n  * @param expandedKeys\n  * need expanded keys, provides `true` means all expanded (used in `rc-tree-select`).\n  */\n function flattenTreeData(treeNodeList, expandedKeys, fieldNames) {\n   var _fillFieldNames = fillFieldNames(fieldNames),\n     fieldTitles = _fillFieldNames._title,\n     fieldKey = _fillFieldNames.key,\n     fieldChildren = _fillFieldNames.children;\n   var expandedKeySet = new Set(expandedKeys === true ? [] : expandedKeys);\n   var flattenList = [];\n   function dig(list) {\n     var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n     return list.map(function (treeNode, index) {\n       var pos = (0, _util.getPosition)(parent ? parent.pos : '0', index);\n       var mergedKey = getKey(treeNode[fieldKey], pos);\n       // Pick matched title in field title list\n       var mergedTitle;\n       for (var i = 0; i < fieldTitles.length; i += 1) {\n         var fieldTitle = fieldTitles[i];\n         if (treeNode[fieldTitle] !== undefined) {\n           mergedTitle = treeNode[fieldTitle];\n           break;\n         }\n       }\n       // Add FlattenDataNode into list\n       var flattenNode = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, (0, _omit.default)(treeNode, [].concat((0, _toConsumableArray2.default)(fieldTitles), [fieldKey, fieldChildren]))), {}, {\n         title: mergedTitle,\n         key: mergedKey,\n         parent: parent,\n         pos: pos,\n         children: null,\n         data: treeNode,\n         isStart: [].concat((0, _toConsumableArray2.default)(parent ? parent.isStart : []), [index === 0]),\n         isEnd: [].concat((0, _toConsumableArray2.default)(parent ? parent.isEnd : []), [index === list.length - 1])\n       });\n       flattenList.push(flattenNode);\n       // Loop treeNode children\n       if (expandedKeys === true || expandedKeySet.has(mergedKey)) {\n         flattenNode.children = dig(treeNode[fieldChildren] || [], flattenNode);\n       } else {\n         flattenNode.children = [];\n       }\n       return flattenNode;\n     });\n   }\n   dig(treeNodeList);\n   return flattenList;\n }\n /**\n  * Traverse all the data by `treeData`.\n  * Please not use it out of the `rc-tree` since we may refactor this code.\n  */\n function traverseDataNodes(dataNodes, callback,\n // To avoid too many params, let use config instead of origin param\n config) {\n   var mergedConfig = {};\n   if ((0, _typeof2.default)(config) === 'object') {\n     mergedConfig = config;\n   } else {\n     mergedConfig = {\n       externalGetKey: config\n     };\n   }\n   mergedConfig = mergedConfig || {};\n   // Init config\n   var _mergedConfig = mergedConfig,\n     childrenPropName = _mergedConfig.childrenPropName,\n     externalGetKey = _mergedConfig.externalGetKey,\n     fieldNames = _mergedConfig.fieldNames;\n   var _fillFieldNames2 = fillFieldNames(fieldNames),\n     fieldKey = _fillFieldNames2.key,\n     fieldChildren = _fillFieldNames2.children;\n   var mergeChildrenPropName = childrenPropName || fieldChildren;\n   // Get keys\n   var syntheticGetKey;\n   if (externalGetKey) {\n     if (typeof externalGetKey === 'string') {\n       syntheticGetKey = function syntheticGetKey(node) {\n         return node[externalGetKey];\n       };\n     } else if (typeof externalGetKey === 'function') {\n       syntheticGetKey = function syntheticGetKey(node) {\n         return externalGetKey(node);\n       };\n     }\n   } else {\n     syntheticGetKey = function syntheticGetKey(node, pos) {\n       return getKey(node[fieldKey], pos);\n     };\n   }\n   // Process\n   function processNode(node, index, parent, pathNodes) {\n     var children = node ? node[mergeChildrenPropName] : dataNodes;\n     var pos = node ? (0, _util.getPosition)(parent.pos, index) : '0';\n     var connectNodes = node ? [].concat((0, _toConsumableArray2.default)(pathNodes), [node]) : [];\n     // Process node if is not root\n     if (node) {\n       var key = syntheticGetKey(node, pos);\n       var data = {\n         node: node,\n         index: index,\n         pos: pos,\n         key: key,\n         parentPos: parent.node ? parent.pos : null,\n         level: parent.level + 1,\n         nodes: connectNodes\n       };\n       callback(data);\n     }\n     // Process children node\n     if (children) {\n       children.forEach(function (subNode, subIndex) {\n         processNode(subNode, subIndex, {\n           node: node,\n           pos: pos,\n           level: parent ? parent.level + 1 : -1\n         }, connectNodes);\n       });\n     }\n   }\n   processNode(null);\n }\n /**\n  * Convert `treeData` into entity records.\n  */\n function convertDataToEntities(dataNodes) {\n   var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n     initWrapper = _ref2.initWrapper,\n     processEntity = _ref2.processEntity,\n     onProcessFinished = _ref2.onProcessFinished,\n     externalGetKey = _ref2.externalGetKey,\n     childrenPropName = _ref2.childrenPropName,\n     fieldNames = _ref2.fieldNames;\n   var /** @deprecated Use `config.externalGetKey` instead */\n   legacyExternalGetKey = arguments.length > 2 ? arguments[2] : undefined;\n   // Init config\n   var mergedExternalGetKey = externalGetKey || legacyExternalGetKey;\n   var posEntities = {};\n   var keyEntities = {};\n   var wrapper = {\n     posEntities: posEntities,\n     keyEntities: keyEntities\n   };\n   if (initWrapper) {\n     wrapper = initWrapper(wrapper) || wrapper;\n   }\n   traverseDataNodes(dataNodes, function (item) {\n     var node = item.node,\n       index = item.index,\n       pos = item.pos,\n       key = item.key,\n       parentPos = item.parentPos,\n       level = item.level,\n       nodes = item.nodes;\n     var entity = {\n       node: node,\n       nodes: nodes,\n       index: index,\n       key: key,\n       pos: pos,\n       level: level\n     };\n     var mergedKey = getKey(key, pos);\n     posEntities[pos] = entity;\n     keyEntities[mergedKey] = entity;\n     // Fill children\n     entity.parent = posEntities[parentPos];\n     if (entity.parent) {\n       entity.parent.children = entity.parent.children || [];\n       entity.parent.children.push(entity);\n     }\n     if (processEntity) {\n       processEntity(entity, wrapper);\n     }\n   }, {\n     externalGetKey: mergedExternalGetKey,\n     childrenPropName: childrenPropName,\n     fieldNames: fieldNames\n   });\n   if (onProcessFinished) {\n     onProcessFinished(wrapper);\n   }\n   return wrapper;\n }\n /**\n  * Get TreeNode props with Tree props.\n  */\n function getTreeNodeProps(key, _ref3) {\n   var expandedKeys = _ref3.expandedKeys,\n     selectedKeys = _ref3.selectedKeys,\n     loadedKeys = _ref3.loadedKeys,\n     loadingKeys = _ref3.loadingKeys,\n     checkedKeys = _ref3.checkedKeys,\n     halfCheckedKeys = _ref3.halfCheckedKeys,\n     dragOverNodeKey = _ref3.dragOverNodeKey,\n     dropPosition = _ref3.dropPosition,\n     keyEntities = _ref3.keyEntities;\n   var entity = keyEntities[key];\n   var treeNodeProps = {\n     eventKey: key,\n     expanded: expandedKeys.indexOf(key) !== -1,\n     selected: selectedKeys.indexOf(key) !== -1,\n     loaded: loadedKeys.indexOf(key) !== -1,\n     loading: loadingKeys.indexOf(key) !== -1,\n     checked: checkedKeys.indexOf(key) !== -1,\n     halfChecked: halfCheckedKeys.indexOf(key) !== -1,\n     pos: String(entity ? entity.pos : ''),\n     // [Legacy] Drag props\n     // Since the interaction of drag is changed, the semantic of the props are\n     // not accuracy, I think it should be finally removed\n     dragOver: dragOverNodeKey === key && dropPosition === 0,\n     dragOverGapTop: dragOverNodeKey === key && dropPosition === -1,\n     dragOverGapBottom: dragOverNodeKey === key && dropPosition === 1\n   };\n   return treeNodeProps;\n }\n function convertNodePropsToEventData(props) {\n   var data = props.data,\n     expanded = props.expanded,\n     selected = props.selected,\n     checked = props.checked,\n     loaded = props.loaded,\n     loading = props.loading,\n     halfChecked = props.halfChecked,\n     dragOver = props.dragOver,\n     dragOverGapTop = props.dragOverGapTop,\n     dragOverGapBottom = props.dragOverGapBottom,\n     pos = props.pos,\n     active = props.active,\n     eventKey = props.eventKey;\n   var eventData = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, data), {}, {\n     expanded: expanded,\n     selected: selected,\n     checked: checked,\n     loaded: loaded,\n     loading: loading,\n     halfChecked: halfChecked,\n     dragOver: dragOver,\n     dragOverGapTop: dragOverGapTop,\n     dragOverGapBottom: dragOverGapBottom,\n     pos: pos,\n     active: active,\n     key: eventKey\n   });\n   if (!('props' in eventData)) {\n     Object.defineProperty(eventData, 'props', {\n       get: function get() {\n         (0, _warning.default)(false, 'Second param return from event is node data instead of TreeNode instance. Please read value directly instead of reading from `props`.');\n         return props;\n       }\n     });\n   }\n   return eventData;\n }\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n___esModule = module.exports.__esModule;\n_convertDataToEntities = module.exports.convertDataToEntities;\n_convertNodePropsToEventData = module.exports.convertNodePropsToEventData;\n_convertTreeToData = module.exports.convertTreeToData;\n_fillFieldNames0 = module.exports.fillFieldNames;\n_flattenTreeData = module.exports.flattenTreeData;\n_getKey = module.exports.getKey;\n_getTreeNodeProps = module.exports.getTreeNodeProps;\n_traverseDataNodes = module.exports.traverseDataNodes;\n_warningWithoutKey = module.exports.warningWithoutKey;\n\n}, () => ({\n  '@babel/runtime/helpers/interopRequireDefault': _req,\n  '@babel/runtime/helpers/typeof': _req0,\n  '@babel/runtime/helpers/toConsumableArray': _req1,\n  '@babel/runtime/helpers/objectSpread2': _req2,\n  '@babel/runtime/helpers/objectWithoutProperties': _req3,\n  'rc-util/lib/omit': _req4,\n  'rc-util/lib/Children/toArray': _req5,\n  'rc-util/lib/warning': _req6,\n  '../util': _req7,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}