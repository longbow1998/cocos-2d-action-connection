{"version":3,"sources":["file:///Users/longbow/node_modules/lodash/_isMasked.js"],"names":["_cjsLoader","_req","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","coreJsData","maskSrcKey","uid","exec","keys","IE_PROTO","isMasked","func","_cjsExports"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;AACkBC,MAAAA,I,iBAAhBC,Y;;;8BAEHA,Y,GAAe,cAAYC,G;;AACjCH,MAAAA,UAAU,CAACI,MAAX,CAAkBF,YAAlB,EAAgC,UAAUG,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;AAGC,YAAIC,UAAU,GAAGJ,OAAO,CAAC,eAAD,CAAxB;AAEA;;;AACA,YAAIK,UAAU,GAAI,YAAW;AAC3B,cAAIC,GAAG,GAAG,SAASC,IAAT,CAAcH,UAAU,IAAIA,UAAU,CAACI,IAAzB,IAAiCJ,UAAU,CAACI,IAAX,CAAgBC,QAAjD,IAA6D,EAA3E,CAAV;AACA,iBAAOH,GAAG,GAAI,mBAAmBA,GAAvB,GAA8B,EAAxC;AACD,SAHiB,EAAlB;AAKA;AACD;AACA;AACA;AACA;AACA;AACA;;;AACC,iBAASI,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,iBAAO,CAAC,CAACN,UAAF,IAAiBA,UAAU,IAAIM,IAAtC;AACD;;AAEDV,QAAAA,MAAM,CAACF,OAAP,GAAiBW,QAAjB,CAvB0F,CA0B3F;;AAEA,2BAAAE,WAAW,GAAGX,MAAM,CAACF,OAArB;AAGC,OA/BD,EA+BG,OAAO;AACR,yBAAiBJ;AADT,OAAP,CA/BH","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from './_coreJsData';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n var coreJsData = require('./_coreJsData');\n\n /** Used to detect methods masquerading as native. */\n var maskSrcKey = (function() {\n   var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n   return uid ? ('Symbol(src)_1.' + uid) : '';\n }());\n\n /**\n  * Checks if `func` has its source masked.\n  *\n  * @private\n  * @param {Function} func The function to check.\n  * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n  */\n function isMasked(func) {\n   return !!maskSrcKey && (maskSrcKey in func);\n }\n\n module.exports = isMasked;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  './_coreJsData': _req,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}