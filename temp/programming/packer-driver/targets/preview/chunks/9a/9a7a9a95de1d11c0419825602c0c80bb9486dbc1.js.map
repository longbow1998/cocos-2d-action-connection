{"version":3,"sources":["file:///Users/longbow/node_modules/lodash/isTypedArray.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","url","define","exports","require","module","__filename","__dirname","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","isTypedArray","_cjsExports"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;AACkBC,MAAAA,I,iBAAhBC,Y;;AACgBC,MAAAA,K,iBAAhBD,Y;;AACgBE,MAAAA,K,iBAAhBF,Y;;;8BAEHA,Y,GAAe,cAAYG,G;;AACjCL,MAAAA,UAAU,CAACM,MAAX,CAAkBJ,YAAlB,EAAgC,UAAUK,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;AAGC,YAAIC,gBAAgB,GAAGJ,OAAO,CAAC,qBAAD,CAA9B;AAAA,YACIK,SAAS,GAAGL,OAAO,CAAC,cAAD,CADvB;AAAA,YAEIM,QAAQ,GAAGN,OAAO,CAAC,aAAD,CAFtB;AAIA;;;AACA,YAAIO,gBAAgB,GAAGD,QAAQ,IAAIA,QAAQ,CAACE,YAA5C;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,YAAIA,YAAY,GAAGD,gBAAgB,GAAGF,SAAS,CAACE,gBAAD,CAAZ,GAAiCH,gBAApE;AAEAH,QAAAA,MAAM,CAACF,OAAP,GAAiBS,YAAjB,CA9B0F,CAiC3F;;AAEA,2BAAAC,WAAW,GAAGR,MAAM,CAACF,OAArB;AAGC,OAtCD,EAsCG,OAAO;AACR,+BAAuBN,IADf;AAER,wBAAgBE,KAFR;AAGR,uBAAeC;AAHP,OAAP,CAtCH","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from './_baseIsTypedArray';\nimport { __cjsMetaURL as _req0} from './_baseUnary';\nimport { __cjsMetaURL as _req1} from './_nodeUtil';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n var baseIsTypedArray = require('./_baseIsTypedArray'),\n     baseUnary = require('./_baseUnary'),\n     nodeUtil = require('./_nodeUtil');\n\n /* Node.js helper references. */\n var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n /**\n  * Checks if `value` is classified as a typed array.\n  *\n  * @static\n  * @memberOf _\n  * @since 3.0.0\n  * @category Lang\n  * @param {*} value The value to check.\n  * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n  * @example\n  *\n  * _.isTypedArray(new Uint8Array);\n  * // => true\n  *\n  * _.isTypedArray([]);\n  * // => false\n  */\n var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n module.exports = isTypedArray;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  './_baseIsTypedArray': _req,\n  './_baseUnary': _req0,\n  './_nodeUtil': _req1,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}