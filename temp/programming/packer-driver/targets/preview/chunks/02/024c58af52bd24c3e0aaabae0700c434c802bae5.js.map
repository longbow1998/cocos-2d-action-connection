{"version":3,"sources":["file:///Users/longbow/node_modules/lodash/toNumber.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","url","define","exports","require","module","__filename","__dirname","baseTrim","isObject","isSymbol","NAN","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toNumber","value","other","valueOf","isBinary","test","slice","_cjsExports"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;AACkBC,MAAAA,I,iBAAhBC,Y;;AACgBC,MAAAA,K,iBAAhBD,Y;;AACgBE,MAAAA,K,iBAAhBF,Y;;;8BAEHA,Y,GAAe,cAAYG,G;;AACjCL,MAAAA,UAAU,CAACM,MAAX,CAAkBJ,YAAlB,EAAgC,UAAUK,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;AAGC,YAAIC,QAAQ,GAAGJ,OAAO,CAAC,aAAD,CAAtB;AAAA,YACIK,QAAQ,GAAGL,OAAO,CAAC,YAAD,CADtB;AAAA,YAEIM,QAAQ,GAAGN,OAAO,CAAC,YAAD,CAFtB;AAIA;;;AACA,YAAIO,GAAG,GAAG,IAAI,CAAd;AAEA;;AACA,YAAIC,UAAU,GAAG,oBAAjB;AAEA;;AACA,YAAIC,UAAU,GAAG,YAAjB;AAEA;;AACA,YAAIC,SAAS,GAAG,aAAhB;AAEA;;AACA,YAAIC,YAAY,GAAGC,QAAnB;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,iBAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,cAAI,OAAOA,KAAP,IAAgB,QAApB,EAA8B;AAC5B,mBAAOA,KAAP;AACD;;AACD,cAAIR,QAAQ,CAACQ,KAAD,CAAZ,EAAqB;AACnB,mBAAOP,GAAP;AACD;;AACD,cAAIF,QAAQ,CAACS,KAAD,CAAZ,EAAqB;AACnB,gBAAIC,KAAK,GAAG,OAAOD,KAAK,CAACE,OAAb,IAAwB,UAAxB,GAAqCF,KAAK,CAACE,OAAN,EAArC,GAAuDF,KAAnE;AACAA,YAAAA,KAAK,GAAGT,QAAQ,CAACU,KAAD,CAAR,GAAmBA,KAAK,GAAG,EAA3B,GAAiCA,KAAzC;AACD;;AACD,cAAI,OAAOD,KAAP,IAAgB,QAApB,EAA8B;AAC5B,mBAAOA,KAAK,KAAK,CAAV,GAAcA,KAAd,GAAsB,CAACA,KAA9B;AACD;;AACDA,UAAAA,KAAK,GAAGV,QAAQ,CAACU,KAAD,CAAhB;AACA,cAAIG,QAAQ,GAAGR,UAAU,CAACS,IAAX,CAAgBJ,KAAhB,CAAf;AACA,iBAAQG,QAAQ,IAAIP,SAAS,CAACQ,IAAV,CAAeJ,KAAf,CAAb,GACHH,YAAY,CAACG,KAAK,CAACK,KAAN,CAAY,CAAZ,CAAD,EAAiBF,QAAQ,GAAG,CAAH,GAAO,CAAhC,CADT,GAEFT,UAAU,CAACU,IAAX,CAAgBJ,KAAhB,IAAyBP,GAAzB,GAA+B,CAACO,KAFrC;AAGD;;AAEDb,QAAAA,MAAM,CAACF,OAAP,GAAiBc,QAAjB,CAnE0F,CAsE3F;;AAEA,2BAAAO,WAAW,GAAGnB,MAAM,CAACF,OAArB;AAGC,OA3ED,EA2EG,OAAO;AACR,uBAAeN,IADP;AAER,sBAAcE,KAFN;AAGR,sBAAcC;AAHN,OAAP,CA3EH","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from './_baseTrim';\nimport { __cjsMetaURL as _req0} from './isObject';\nimport { __cjsMetaURL as _req1} from './isSymbol';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n var baseTrim = require('./_baseTrim'),\n     isObject = require('./isObject'),\n     isSymbol = require('./isSymbol');\n\n /** Used as references for various `Number` constants. */\n var NAN = 0 / 0;\n\n /** Used to detect bad signed hexadecimal string values. */\n var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n /** Used to detect binary string values. */\n var reIsBinary = /^0b[01]+$/i;\n\n /** Used to detect octal string values. */\n var reIsOctal = /^0o[0-7]+$/i;\n\n /** Built-in method references without a dependency on `root`. */\n var freeParseInt = parseInt;\n\n /**\n  * Converts `value` to a number.\n  *\n  * @static\n  * @memberOf _\n  * @since 4.0.0\n  * @category Lang\n  * @param {*} value The value to process.\n  * @returns {number} Returns the number.\n  * @example\n  *\n  * _.toNumber(3.2);\n  * // => 3.2\n  *\n  * _.toNumber(Number.MIN_VALUE);\n  * // => 5e-324\n  *\n  * _.toNumber(Infinity);\n  * // => Infinity\n  *\n  * _.toNumber('3.2');\n  * // => 3.2\n  */\n function toNumber(value) {\n   if (typeof value == 'number') {\n     return value;\n   }\n   if (isSymbol(value)) {\n     return NAN;\n   }\n   if (isObject(value)) {\n     var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n     value = isObject(other) ? (other + '') : other;\n   }\n   if (typeof value != 'string') {\n     return value === 0 ? value : +value;\n   }\n   value = baseTrim(value);\n   var isBinary = reIsBinary.test(value);\n   return (isBinary || reIsOctal.test(value))\n     ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n     : (reIsBadHex.test(value) ? NAN : +value);\n }\n\n module.exports = toNumber;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, () => ({\n  './_baseTrim': _req,\n  './isObject': _req0,\n  './isSymbol': _req1,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}