{"version":3,"sources":["file:///Users/longbow/node_modules/lodash/_cacheHas.js"],"names":["_cjsLoader","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","cacheHas","cache","key","has","_cjsExports"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;;8BAEDC,Y,GAAe,cAAYC,G;;AACjCF,MAAAA,UAAU,CAACG,MAAX,CAAkBF,YAAlB,EAAgC,UAAUG,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;;AAGC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACC,iBAASC,QAAT,CAAkBC,KAAlB,EAAyBC,GAAzB,EAA8B;AAC5B,iBAAOD,KAAK,CAACE,GAAN,CAAUD,GAAV,CAAP;AACD;;AAEDL,QAAAA,MAAM,CAACF,OAAP,GAAiBK,QAAjB,CAhB0F,CAmB3F;;AAEA,2BAAAI,WAAW,GAAGP,MAAM,CAACF,OAArB;AAGC,OAxBD,EAwBG,EAxBH","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n /**\n  * Checks if a `cache` value for `key` exists.\n  *\n  * @private\n  * @param {Object} cache The cache to query.\n  * @param {string} key The key of the entry to check.\n  * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n  */\n function cacheHas(cache, key) {\n   return cache.has(key);\n }\n\n module.exports = cacheHas;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, {});\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}