{"version":3,"sources":["file:///Users/longbow/node_modules/resize-observer-polyfill/dist/ResizeObserver.js"],"names":["_cjsLoader","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","global","factory","amd","ResizeObserver","MapShim","Map","getIndex","arr","key","result","some","entry","index","class_1","__entries__","Object","defineProperty","prototype","get","length","enumerable","configurable","set","value","push","delete","entries","splice","has","clear","forEach","callback","ctx","_i","_a","call","isBrowser","window","document","global$1","Math","self","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","trailingTimeout","throttle","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","REFRESH_DELAY","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","changesDetected","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","observe","attributes","childList","characterData","subtree","removeEventListener","disconnect","_b","propertyName","isReflowProperty","getInstance","instance_","defineConfigurable","target","props","keys","writable","getWindowOf","ownerGlobal","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","arguments","reduce","size","position","getPaddings","paddings","positions_1","getSVGContentRect","bbox","getBBox","width","height","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","horizPad","left","right","vertPad","top","bottom","boxSizing","round","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","documentElement","getContentRect","createReadOnlyRect","x","y","Constr","DOMRectReadOnly","rect","create","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","broadcastRect","ResizeObserverEntry","rectInit","contentRect","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","_this","observation","map","WeakMap","method","apply","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n (function (global, factory) {\n     typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n     typeof define === 'function' && define.amd ? define(factory) :\n     (global.ResizeObserver = factory());\n }(this, (function () { 'use strict';\n\n     /**\r\n      * A collection of shims that provide minimal functionality of the ES6 collections.\r\n      *\r\n      * These implementations are not meant to be used outside of the ResizeObserver\r\n      * modules as they cover only a limited range of use cases.\r\n      */\r\n     /* eslint-disable require-jsdoc, valid-jsdoc */\r\n     var MapShim = (function () {\r\n         if (typeof Map !== 'undefined') {\r\n             return Map;\r\n         }\r\n         /**\r\n          * Returns index in provided array that matches the specified key.\r\n          *\r\n          * @param {Array<Array>} arr\r\n          * @param {*} key\r\n          * @returns {number}\r\n          */\r\n         function getIndex(arr, key) {\r\n             var result = -1;\r\n             arr.some(function (entry, index) {\r\n                 if (entry[0] === key) {\r\n                     result = index;\r\n                     return true;\r\n                 }\r\n                 return false;\r\n             });\r\n             return result;\r\n         }\r\n         return /** @class */ (function () {\r\n             function class_1() {\r\n                 this.__entries__ = [];\r\n             }\r\n             Object.defineProperty(class_1.prototype, \"size\", {\r\n                 /**\r\n                  * @returns {boolean}\r\n                  */\r\n                 get: function () {\r\n                     return this.__entries__.length;\r\n                 },\r\n                 enumerable: true,\r\n                 configurable: true\r\n             });\r\n             /**\r\n              * @param {*} key\r\n              * @returns {*}\r\n              */\r\n             class_1.prototype.get = function (key) {\r\n                 var index = getIndex(this.__entries__, key);\r\n                 var entry = this.__entries__[index];\r\n                 return entry && entry[1];\r\n             };\r\n             /**\r\n              * @param {*} key\r\n              * @param {*} value\r\n              * @returns {void}\r\n              */\r\n             class_1.prototype.set = function (key, value) {\r\n                 var index = getIndex(this.__entries__, key);\r\n                 if (~index) {\r\n                     this.__entries__[index][1] = value;\r\n                 }\r\n                 else {\r\n                     this.__entries__.push([key, value]);\r\n                 }\r\n             };\r\n             /**\r\n              * @param {*} key\r\n              * @returns {void}\r\n              */\r\n             class_1.prototype.delete = function (key) {\r\n                 var entries = this.__entries__;\r\n                 var index = getIndex(entries, key);\r\n                 if (~index) {\r\n                     entries.splice(index, 1);\r\n                 }\r\n             };\r\n             /**\r\n              * @param {*} key\r\n              * @returns {void}\r\n              */\r\n             class_1.prototype.has = function (key) {\r\n                 return !!~getIndex(this.__entries__, key);\r\n             };\r\n             /**\r\n              * @returns {void}\r\n              */\r\n             class_1.prototype.clear = function () {\r\n                 this.__entries__.splice(0);\r\n             };\r\n             /**\r\n              * @param {Function} callback\r\n              * @param {*} [ctx=null]\r\n              * @returns {void}\r\n              */\r\n             class_1.prototype.forEach = function (callback, ctx) {\r\n                 if (ctx === void 0) { ctx = null; }\r\n                 for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                     var entry = _a[_i];\r\n                     callback.call(ctx, entry[1], entry[0]);\r\n                 }\r\n             };\r\n             return class_1;\r\n         }());\r\n     })();\n\n     /**\r\n      * Detects whether window and document objects are available in current environment.\r\n      */\r\n     var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n     // Returns global object of a current environment.\r\n     var global$1 = (function () {\r\n         if (typeof global !== 'undefined' && global.Math === Math) {\r\n             return global;\r\n         }\r\n         if (typeof self !== 'undefined' && self.Math === Math) {\r\n             return self;\r\n         }\r\n         if (typeof window !== 'undefined' && window.Math === Math) {\r\n             return window;\r\n         }\r\n         // eslint-disable-next-line no-new-func\r\n         return Function('return this')();\r\n     })();\n\n     /**\r\n      * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n      * first one is not supported.\r\n      *\r\n      * @returns {number} Requests' identifier.\r\n      */\r\n     var requestAnimationFrame$1 = (function () {\r\n         if (typeof requestAnimationFrame === 'function') {\r\n             // It's required to use a bounded function because IE sometimes throws\r\n             // an \"Invalid calling object\" error if rAF is invoked without the global\r\n             // object on the left hand side.\r\n             return requestAnimationFrame.bind(global$1);\r\n         }\r\n         return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n     })();\n\n     // Defines minimum timeout before adding a trailing call.\r\n     var trailingTimeout = 2;\r\n     /**\r\n      * Creates a wrapper function which ensures that provided callback will be\r\n      * invoked only once during the specified delay period.\r\n      *\r\n      * @param {Function} callback - Function to be invoked after the delay period.\r\n      * @param {number} delay - Delay after which to invoke callback.\r\n      * @returns {Function}\r\n      */\r\n     function throttle (callback, delay) {\r\n         var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n         /**\r\n          * Invokes the original callback function and schedules new invocation if\r\n          * the \"proxy\" was called during current request.\r\n          *\r\n          * @returns {void}\r\n          */\r\n         function resolvePending() {\r\n             if (leadingCall) {\r\n                 leadingCall = false;\r\n                 callback();\r\n             }\r\n             if (trailingCall) {\r\n                 proxy();\r\n             }\r\n         }\r\n         /**\r\n          * Callback invoked after the specified delay. It will further postpone\r\n          * invocation of the original function delegating it to the\r\n          * requestAnimationFrame.\r\n          *\r\n          * @returns {void}\r\n          */\r\n         function timeoutCallback() {\r\n             requestAnimationFrame$1(resolvePending);\r\n         }\r\n         /**\r\n          * Schedules invocation of the original function.\r\n          *\r\n          * @returns {void}\r\n          */\r\n         function proxy() {\r\n             var timeStamp = Date.now();\r\n             if (leadingCall) {\r\n                 // Reject immediately following calls.\r\n                 if (timeStamp - lastCallTime < trailingTimeout) {\r\n                     return;\r\n                 }\r\n                 // Schedule new call to be in invoked when the pending one is resolved.\r\n                 // This is important for \"transitions\" which never actually start\r\n                 // immediately so there is a chance that we might miss one if change\r\n                 // happens amids the pending invocation.\r\n                 trailingCall = true;\r\n             }\r\n             else {\r\n                 leadingCall = true;\r\n                 trailingCall = false;\r\n                 setTimeout(timeoutCallback, delay);\r\n             }\r\n             lastCallTime = timeStamp;\r\n         }\r\n         return proxy;\r\n     }\n\n     // Minimum delay before invoking the update of observers.\r\n     var REFRESH_DELAY = 20;\r\n     // A list of substrings of CSS properties used to find transition events that\r\n     // might affect dimensions of observed elements.\r\n     var transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n     // Check if MutationObserver is available.\r\n     var mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n     /**\r\n      * Singleton controller class which handles updates of ResizeObserver instances.\r\n      */\r\n     var ResizeObserverController = /** @class */ (function () {\r\n         /**\r\n          * Creates a new instance of ResizeObserverController.\r\n          *\r\n          * @private\r\n          */\r\n         function ResizeObserverController() {\r\n             /**\r\n              * Indicates whether DOM listeners have been added.\r\n              *\r\n              * @private {boolean}\r\n              */\r\n             this.connected_ = false;\r\n             /**\r\n              * Tells that controller has subscribed for Mutation Events.\r\n              *\r\n              * @private {boolean}\r\n              */\r\n             this.mutationEventsAdded_ = false;\r\n             /**\r\n              * Keeps reference to the instance of MutationObserver.\r\n              *\r\n              * @private {MutationObserver}\r\n              */\r\n             this.mutationsObserver_ = null;\r\n             /**\r\n              * A list of connected observers.\r\n              *\r\n              * @private {Array<ResizeObserverSPI>}\r\n              */\r\n             this.observers_ = [];\r\n             this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n             this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n         }\r\n         /**\r\n          * Adds observer to observers list.\r\n          *\r\n          * @param {ResizeObserverSPI} observer - Observer to be added.\r\n          * @returns {void}\r\n          */\r\n         ResizeObserverController.prototype.addObserver = function (observer) {\r\n             if (!~this.observers_.indexOf(observer)) {\r\n                 this.observers_.push(observer);\r\n             }\r\n             // Add listeners if they haven't been added yet.\r\n             if (!this.connected_) {\r\n                 this.connect_();\r\n             }\r\n         };\r\n         /**\r\n          * Removes observer from observers list.\r\n          *\r\n          * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n          * @returns {void}\r\n          */\r\n         ResizeObserverController.prototype.removeObserver = function (observer) {\r\n             var observers = this.observers_;\r\n             var index = observers.indexOf(observer);\r\n             // Remove observer if it's present in registry.\r\n             if (~index) {\r\n                 observers.splice(index, 1);\r\n             }\r\n             // Remove listeners if controller has no connected observers.\r\n             if (!observers.length && this.connected_) {\r\n                 this.disconnect_();\r\n             }\r\n         };\r\n         /**\r\n          * Invokes the update of observers. It will continue running updates insofar\r\n          * it detects changes.\r\n          *\r\n          * @returns {void}\r\n          */\r\n         ResizeObserverController.prototype.refresh = function () {\r\n             var changesDetected = this.updateObservers_();\r\n             // Continue running updates if changes have been detected as there might\r\n             // be future ones caused by CSS transitions.\r\n             if (changesDetected) {\r\n                 this.refresh();\r\n             }\r\n         };\r\n         /**\r\n          * Updates every observer from observers list and notifies them of queued\r\n          * entries.\r\n          *\r\n          * @private\r\n          * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n          *      dimensions of it's elements.\r\n          */\r\n         ResizeObserverController.prototype.updateObservers_ = function () {\r\n             // Collect observers that have active observations.\r\n             var activeObservers = this.observers_.filter(function (observer) {\r\n                 return observer.gatherActive(), observer.hasActive();\r\n             });\r\n             // Deliver notifications in a separate cycle in order to avoid any\r\n             // collisions between observers, e.g. when multiple instances of\r\n             // ResizeObserver are tracking the same element and the callback of one\r\n             // of them changes content dimensions of the observed target. Sometimes\r\n             // this may result in notifications being blocked for the rest of observers.\r\n             activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n             return activeObservers.length > 0;\r\n         };\r\n         /**\r\n          * Initializes DOM listeners.\r\n          *\r\n          * @private\r\n          * @returns {void}\r\n          */\r\n         ResizeObserverController.prototype.connect_ = function () {\r\n             // Do nothing if running in a non-browser environment or if listeners\r\n             // have been already added.\r\n             if (!isBrowser || this.connected_) {\r\n                 return;\r\n             }\r\n             // Subscription to the \"Transitionend\" event is used as a workaround for\r\n             // delayed transitions. This way it's possible to capture at least the\r\n             // final state of an element.\r\n             document.addEventListener('transitionend', this.onTransitionEnd_);\r\n             window.addEventListener('resize', this.refresh);\r\n             if (mutationObserverSupported) {\r\n                 this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n                 this.mutationsObserver_.observe(document, {\r\n                     attributes: true,\r\n                     childList: true,\r\n                     characterData: true,\r\n                     subtree: true\r\n                 });\r\n             }\r\n             else {\r\n                 document.addEventListener('DOMSubtreeModified', this.refresh);\r\n                 this.mutationEventsAdded_ = true;\r\n             }\r\n             this.connected_ = true;\r\n         };\r\n         /**\r\n          * Removes DOM listeners.\r\n          *\r\n          * @private\r\n          * @returns {void}\r\n          */\r\n         ResizeObserverController.prototype.disconnect_ = function () {\r\n             // Do nothing if running in a non-browser environment or if listeners\r\n             // have been already removed.\r\n             if (!isBrowser || !this.connected_) {\r\n                 return;\r\n             }\r\n             document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n             window.removeEventListener('resize', this.refresh);\r\n             if (this.mutationsObserver_) {\r\n                 this.mutationsObserver_.disconnect();\r\n             }\r\n             if (this.mutationEventsAdded_) {\r\n                 document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n             }\r\n             this.mutationsObserver_ = null;\r\n             this.mutationEventsAdded_ = false;\r\n             this.connected_ = false;\r\n         };\r\n         /**\r\n          * \"Transitionend\" event handler.\r\n          *\r\n          * @private\r\n          * @param {TransitionEvent} event\r\n          * @returns {void}\r\n          */\r\n         ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n             var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n             // Detect whether transition may affect dimensions of an element.\r\n             var isReflowProperty = transitionKeys.some(function (key) {\r\n                 return !!~propertyName.indexOf(key);\r\n             });\r\n             if (isReflowProperty) {\r\n                 this.refresh();\r\n             }\r\n         };\r\n         /**\r\n          * Returns instance of the ResizeObserverController.\r\n          *\r\n          * @returns {ResizeObserverController}\r\n          */\r\n         ResizeObserverController.getInstance = function () {\r\n             if (!this.instance_) {\r\n                 this.instance_ = new ResizeObserverController();\r\n             }\r\n             return this.instance_;\r\n         };\r\n         /**\r\n          * Holds reference to the controller's instance.\r\n          *\r\n          * @private {ResizeObserverController}\r\n          */\r\n         ResizeObserverController.instance_ = null;\r\n         return ResizeObserverController;\r\n     }());\n\n     /**\r\n      * Defines non-writable/enumerable properties of the provided target object.\r\n      *\r\n      * @param {Object} target - Object for which to define properties.\r\n      * @param {Object} props - Properties to be defined.\r\n      * @returns {Object} Target object.\r\n      */\r\n     var defineConfigurable = (function (target, props) {\r\n         for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n             var key = _a[_i];\r\n             Object.defineProperty(target, key, {\r\n                 value: props[key],\r\n                 enumerable: false,\r\n                 writable: false,\r\n                 configurable: true\r\n             });\r\n         }\r\n         return target;\r\n     });\n\n     /**\r\n      * Returns the global object associated with provided element.\r\n      *\r\n      * @param {Object} target\r\n      * @returns {Object}\r\n      */\r\n     var getWindowOf = (function (target) {\r\n         // Assume that the element is an instance of Node, which means that it\r\n         // has the \"ownerDocument\" property from which we can retrieve a\r\n         // corresponding global object.\r\n         var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n         // Return the local global object if it's not possible extract one from\r\n         // provided element.\r\n         return ownerGlobal || global$1;\r\n     });\n\n     // Placeholder of an empty content rectangle.\r\n     var emptyRect = createRectInit(0, 0, 0, 0);\r\n     /**\r\n      * Converts provided string to a number.\r\n      *\r\n      * @param {number|string} value\r\n      * @returns {number}\r\n      */\r\n     function toFloat(value) {\r\n         return parseFloat(value) || 0;\r\n     }\r\n     /**\r\n      * Extracts borders size from provided styles.\r\n      *\r\n      * @param {CSSStyleDeclaration} styles\r\n      * @param {...string} positions - Borders positions (top, right, ...)\r\n      * @returns {number}\r\n      */\r\n     function getBordersSize(styles) {\r\n         var positions = [];\r\n         for (var _i = 1; _i < arguments.length; _i++) {\r\n             positions[_i - 1] = arguments[_i];\r\n         }\r\n         return positions.reduce(function (size, position) {\r\n             var value = styles['border-' + position + '-width'];\r\n             return size + toFloat(value);\r\n         }, 0);\r\n     }\r\n     /**\r\n      * Extracts paddings sizes from provided styles.\r\n      *\r\n      * @param {CSSStyleDeclaration} styles\r\n      * @returns {Object} Paddings box.\r\n      */\r\n     function getPaddings(styles) {\r\n         var positions = ['top', 'right', 'bottom', 'left'];\r\n         var paddings = {};\r\n         for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n             var position = positions_1[_i];\r\n             var value = styles['padding-' + position];\r\n             paddings[position] = toFloat(value);\r\n         }\r\n         return paddings;\r\n     }\r\n     /**\r\n      * Calculates content rectangle of provided SVG element.\r\n      *\r\n      * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n      *      to be calculated.\r\n      * @returns {DOMRectInit}\r\n      */\r\n     function getSVGContentRect(target) {\r\n         var bbox = target.getBBox();\r\n         return createRectInit(0, 0, bbox.width, bbox.height);\r\n     }\r\n     /**\r\n      * Calculates content rectangle of provided HTMLElement.\r\n      *\r\n      * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n      * @returns {DOMRectInit}\r\n      */\r\n     function getHTMLElementContentRect(target) {\r\n         // Client width & height properties can't be\r\n         // used exclusively as they provide rounded values.\r\n         var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n         // By this condition we can catch all non-replaced inline, hidden and\r\n         // detached elements. Though elements with width & height properties less\r\n         // than 0.5 will be discarded as well.\r\n         //\r\n         // Without it we would need to implement separate methods for each of\r\n         // those cases and it's not possible to perform a precise and performance\r\n         // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n         // gives wrong results for elements with width & height less than 0.5.\r\n         if (!clientWidth && !clientHeight) {\r\n             return emptyRect;\r\n         }\r\n         var styles = getWindowOf(target).getComputedStyle(target);\r\n         var paddings = getPaddings(styles);\r\n         var horizPad = paddings.left + paddings.right;\r\n         var vertPad = paddings.top + paddings.bottom;\r\n         // Computed styles of width & height are being used because they are the\r\n         // only dimensions available to JS that contain non-rounded values. It could\r\n         // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n         // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n         var width = toFloat(styles.width), height = toFloat(styles.height);\r\n         // Width & height include paddings and borders when the 'border-box' box\r\n         // model is applied (except for IE).\r\n         if (styles.boxSizing === 'border-box') {\r\n             // Following conditions are required to handle Internet Explorer which\r\n             // doesn't include paddings and borders to computed CSS dimensions.\r\n             //\r\n             // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n             // properties then it's either IE, and thus we don't need to subtract\r\n             // anything, or an element merely doesn't have paddings/borders styles.\r\n             if (Math.round(width + horizPad) !== clientWidth) {\r\n                 width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n             }\r\n             if (Math.round(height + vertPad) !== clientHeight) {\r\n                 height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n             }\r\n         }\r\n         // Following steps can't be applied to the document's root element as its\r\n         // client[Width/Height] properties represent viewport area of the window.\r\n         // Besides, it's as well not necessary as the <html> itself neither has\r\n         // rendered scroll bars nor it can be clipped.\r\n         if (!isDocumentElement(target)) {\r\n             // In some browsers (only in Firefox, actually) CSS width & height\r\n             // include scroll bars size which can be removed at this step as scroll\r\n             // bars are the only difference between rounded dimensions + paddings\r\n             // and \"client\" properties, though that is not always true in Chrome.\r\n             var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n             var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n             // Chrome has a rather weird rounding of \"client\" properties.\r\n             // E.g. for an element with content width of 314.2px it sometimes gives\r\n             // the client width of 315px and for the width of 314.7px it may give\r\n             // 314px. And it doesn't happen all the time. So just ignore this delta\r\n             // as a non-relevant.\r\n             if (Math.abs(vertScrollbar) !== 1) {\r\n                 width -= vertScrollbar;\r\n             }\r\n             if (Math.abs(horizScrollbar) !== 1) {\r\n                 height -= horizScrollbar;\r\n             }\r\n         }\r\n         return createRectInit(paddings.left, paddings.top, width, height);\r\n     }\r\n     /**\r\n      * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n      *\r\n      * @param {Element} target - Element to be checked.\r\n      * @returns {boolean}\r\n      */\r\n     var isSVGGraphicsElement = (function () {\r\n         // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n         // interface.\r\n         if (typeof SVGGraphicsElement !== 'undefined') {\r\n             return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n         }\r\n         // If it's so, then check that element is at least an instance of the\r\n         // SVGElement and that it has the \"getBBox\" method.\r\n         // eslint-disable-next-line no-extra-parens\r\n         return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n             typeof target.getBBox === 'function'); };\r\n     })();\r\n     /**\r\n      * Checks whether provided element is a document element (<html>).\r\n      *\r\n      * @param {Element} target - Element to be checked.\r\n      * @returns {boolean}\r\n      */\r\n     function isDocumentElement(target) {\r\n         return target === getWindowOf(target).document.documentElement;\r\n     }\r\n     /**\r\n      * Calculates an appropriate content rectangle for provided html or svg element.\r\n      *\r\n      * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n      * @returns {DOMRectInit}\r\n      */\r\n     function getContentRect(target) {\r\n         if (!isBrowser) {\r\n             return emptyRect;\r\n         }\r\n         if (isSVGGraphicsElement(target)) {\r\n             return getSVGContentRect(target);\r\n         }\r\n         return getHTMLElementContentRect(target);\r\n     }\r\n     /**\r\n      * Creates rectangle with an interface of the DOMRectReadOnly.\r\n      * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n      *\r\n      * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n      * @returns {DOMRectReadOnly}\r\n      */\r\n     function createReadOnlyRect(_a) {\r\n         var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n         // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n         var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n         var rect = Object.create(Constr.prototype);\r\n         // Rectangle's properties are not writable and non-enumerable.\r\n         defineConfigurable(rect, {\r\n             x: x, y: y, width: width, height: height,\r\n             top: y,\r\n             right: x + width,\r\n             bottom: height + y,\r\n             left: x\r\n         });\r\n         return rect;\r\n     }\r\n     /**\r\n      * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n      * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n      *\r\n      * @param {number} x - X coordinate.\r\n      * @param {number} y - Y coordinate.\r\n      * @param {number} width - Rectangle's width.\r\n      * @param {number} height - Rectangle's height.\r\n      * @returns {DOMRectInit}\r\n      */\r\n     function createRectInit(x, y, width, height) {\r\n         return { x: x, y: y, width: width, height: height };\r\n     }\n\n     /**\r\n      * Class that is responsible for computations of the content rectangle of\r\n      * provided DOM element and for keeping track of it's changes.\r\n      */\r\n     var ResizeObservation = /** @class */ (function () {\r\n         /**\r\n          * Creates an instance of ResizeObservation.\r\n          *\r\n          * @param {Element} target - Element to be observed.\r\n          */\r\n         function ResizeObservation(target) {\r\n             /**\r\n              * Broadcasted width of content rectangle.\r\n              *\r\n              * @type {number}\r\n              */\r\n             this.broadcastWidth = 0;\r\n             /**\r\n              * Broadcasted height of content rectangle.\r\n              *\r\n              * @type {number}\r\n              */\r\n             this.broadcastHeight = 0;\r\n             /**\r\n              * Reference to the last observed content rectangle.\r\n              *\r\n              * @private {DOMRectInit}\r\n              */\r\n             this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n             this.target = target;\r\n         }\r\n         /**\r\n          * Updates content rectangle and tells whether it's width or height properties\r\n          * have changed since the last broadcast.\r\n          *\r\n          * @returns {boolean}\r\n          */\r\n         ResizeObservation.prototype.isActive = function () {\r\n             var rect = getContentRect(this.target);\r\n             this.contentRect_ = rect;\r\n             return (rect.width !== this.broadcastWidth ||\r\n                 rect.height !== this.broadcastHeight);\r\n         };\r\n         /**\r\n          * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n          * from the corresponding properties of the last observed content rectangle.\r\n          *\r\n          * @returns {DOMRectInit} Last observed content rectangle.\r\n          */\r\n         ResizeObservation.prototype.broadcastRect = function () {\r\n             var rect = this.contentRect_;\r\n             this.broadcastWidth = rect.width;\r\n             this.broadcastHeight = rect.height;\r\n             return rect;\r\n         };\r\n         return ResizeObservation;\r\n     }());\n\n     var ResizeObserverEntry = /** @class */ (function () {\r\n         /**\r\n          * Creates an instance of ResizeObserverEntry.\r\n          *\r\n          * @param {Element} target - Element that is being observed.\r\n          * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n          */\r\n         function ResizeObserverEntry(target, rectInit) {\r\n             var contentRect = createReadOnlyRect(rectInit);\r\n             // According to the specification following properties are not writable\r\n             // and are also not enumerable in the native implementation.\r\n             //\r\n             // Property accessors are not being used as they'd require to define a\r\n             // private WeakMap storage which may cause memory leaks in browsers that\r\n             // don't support this type of collections.\r\n             defineConfigurable(this, { target: target, contentRect: contentRect });\r\n         }\r\n         return ResizeObserverEntry;\r\n     }());\n\n     var ResizeObserverSPI = /** @class */ (function () {\r\n         /**\r\n          * Creates a new instance of ResizeObserver.\r\n          *\r\n          * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n          *      when one of the observed elements changes it's content dimensions.\r\n          * @param {ResizeObserverController} controller - Controller instance which\r\n          *      is responsible for the updates of observer.\r\n          * @param {ResizeObserver} callbackCtx - Reference to the public\r\n          *      ResizeObserver instance which will be passed to callback function.\r\n          */\r\n         function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n             /**\r\n              * Collection of resize observations that have detected changes in dimensions\r\n              * of elements.\r\n              *\r\n              * @private {Array<ResizeObservation>}\r\n              */\r\n             this.activeObservations_ = [];\r\n             /**\r\n              * Registry of the ResizeObservation instances.\r\n              *\r\n              * @private {Map<Element, ResizeObservation>}\r\n              */\r\n             this.observations_ = new MapShim();\r\n             if (typeof callback !== 'function') {\r\n                 throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n             }\r\n             this.callback_ = callback;\r\n             this.controller_ = controller;\r\n             this.callbackCtx_ = callbackCtx;\r\n         }\r\n         /**\r\n          * Starts observing provided element.\r\n          *\r\n          * @param {Element} target - Element to be observed.\r\n          * @returns {void}\r\n          */\r\n         ResizeObserverSPI.prototype.observe = function (target) {\r\n             if (!arguments.length) {\r\n                 throw new TypeError('1 argument required, but only 0 present.');\r\n             }\r\n             // Do nothing if current environment doesn't have the Element interface.\r\n             if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n                 return;\r\n             }\r\n             if (!(target instanceof getWindowOf(target).Element)) {\r\n                 throw new TypeError('parameter 1 is not of type \"Element\".');\r\n             }\r\n             var observations = this.observations_;\r\n             // Do nothing if element is already being observed.\r\n             if (observations.has(target)) {\r\n                 return;\r\n             }\r\n             observations.set(target, new ResizeObservation(target));\r\n             this.controller_.addObserver(this);\r\n             // Force the update of observations.\r\n             this.controller_.refresh();\r\n         };\r\n         /**\r\n          * Stops observing provided element.\r\n          *\r\n          * @param {Element} target - Element to stop observing.\r\n          * @returns {void}\r\n          */\r\n         ResizeObserverSPI.prototype.unobserve = function (target) {\r\n             if (!arguments.length) {\r\n                 throw new TypeError('1 argument required, but only 0 present.');\r\n             }\r\n             // Do nothing if current environment doesn't have the Element interface.\r\n             if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n                 return;\r\n             }\r\n             if (!(target instanceof getWindowOf(target).Element)) {\r\n                 throw new TypeError('parameter 1 is not of type \"Element\".');\r\n             }\r\n             var observations = this.observations_;\r\n             // Do nothing if element is not being observed.\r\n             if (!observations.has(target)) {\r\n                 return;\r\n             }\r\n             observations.delete(target);\r\n             if (!observations.size) {\r\n                 this.controller_.removeObserver(this);\r\n             }\r\n         };\r\n         /**\r\n          * Stops observing all elements.\r\n          *\r\n          * @returns {void}\r\n          */\r\n         ResizeObserverSPI.prototype.disconnect = function () {\r\n             this.clearActive();\r\n             this.observations_.clear();\r\n             this.controller_.removeObserver(this);\r\n         };\r\n         /**\r\n          * Collects observation instances the associated element of which has changed\r\n          * it's content rectangle.\r\n          *\r\n          * @returns {void}\r\n          */\r\n         ResizeObserverSPI.prototype.gatherActive = function () {\r\n             var _this = this;\r\n             this.clearActive();\r\n             this.observations_.forEach(function (observation) {\r\n                 if (observation.isActive()) {\r\n                     _this.activeObservations_.push(observation);\r\n                 }\r\n             });\r\n         };\r\n         /**\r\n          * Invokes initial callback function with a list of ResizeObserverEntry\r\n          * instances collected from active resize observations.\r\n          *\r\n          * @returns {void}\r\n          */\r\n         ResizeObserverSPI.prototype.broadcastActive = function () {\r\n             // Do nothing if observer doesn't have active observations.\r\n             if (!this.hasActive()) {\r\n                 return;\r\n             }\r\n             var ctx = this.callbackCtx_;\r\n             // Create ResizeObserverEntry instance for every active observation.\r\n             var entries = this.activeObservations_.map(function (observation) {\r\n                 return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n             });\r\n             this.callback_.call(ctx, entries, ctx);\r\n             this.clearActive();\r\n         };\r\n         /**\r\n          * Clears the collection of active observations.\r\n          *\r\n          * @returns {void}\r\n          */\r\n         ResizeObserverSPI.prototype.clearActive = function () {\r\n             this.activeObservations_.splice(0);\r\n         };\r\n         /**\r\n          * Tells whether observer has active observations.\r\n          *\r\n          * @returns {boolean}\r\n          */\r\n         ResizeObserverSPI.prototype.hasActive = function () {\r\n             return this.activeObservations_.length > 0;\r\n         };\r\n         return ResizeObserverSPI;\r\n     }());\n\n     // Registry of internal observers. If WeakMap is not available use current shim\r\n     // for the Map collection as it has all required methods and because WeakMap\r\n     // can't be fully polyfilled anyway.\r\n     var observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n     /**\r\n      * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n      * exposing only those methods and properties that are defined in the spec.\r\n      */\r\n     var ResizeObserver = /** @class */ (function () {\r\n         /**\r\n          * Creates a new instance of ResizeObserver.\r\n          *\r\n          * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n          *      dimensions of the observed elements change.\r\n          */\r\n         function ResizeObserver(callback) {\r\n             if (!(this instanceof ResizeObserver)) {\r\n                 throw new TypeError('Cannot call a class as a function.');\r\n             }\r\n             if (!arguments.length) {\r\n                 throw new TypeError('1 argument required, but only 0 present.');\r\n             }\r\n             var controller = ResizeObserverController.getInstance();\r\n             var observer = new ResizeObserverSPI(callback, controller, this);\r\n             observers.set(this, observer);\r\n         }\r\n         return ResizeObserver;\r\n     }());\r\n     // Expose public methods of ResizeObserver.\r\n     [\r\n         'observe',\r\n         'unobserve',\r\n         'disconnect'\r\n     ].forEach(function (method) {\r\n         ResizeObserver.prototype[method] = function () {\r\n             var _a;\r\n             return (_a = observers.get(this))[method].apply(_a, arguments);\r\n         };\r\n     });\n\n     var index = (function () {\r\n         // Export existing implementation if available.\r\n         if (typeof global$1.ResizeObserver !== 'undefined') {\r\n             return global$1.ResizeObserver;\r\n         }\r\n         return ResizeObserver;\r\n     })();\n\n     return index;\n\n })));\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, {});\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}