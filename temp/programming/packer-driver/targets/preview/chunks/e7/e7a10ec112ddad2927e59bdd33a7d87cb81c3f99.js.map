{"version":3,"sources":["file:///Users/longbow/node_modules/rc-upload/lib/attr-accept.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","url","define","exports","require","module","__filename","__dirname","_interopRequireDefault","Object","defineProperty","value","default","_warning","_default","file","acceptedFiles","acceptedFilesArray","Array","isArray","split","fileName","name","mimeType","type","baseMimeType","replace","some","validType","trim","test","charAt","lowerFileName","toLowerCase","lowerType","affixList","affix","endsWith","concat","_cjsExports","___esModule","__esModule","_default0"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from '@babel/runtime/helpers/interopRequireDefault';\nimport { __cjsMetaURL as _req0} from 'rc-util/lib/warning';\nlet _cjsExports;\nlet ___esModule;\nlet _default0;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n \"use strict\";\n\n var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\n Object.defineProperty(exports, \"__esModule\", {\n   value: true\n });\n exports.default = void 0;\n\n var _warning = _interopRequireDefault(require(\"rc-util/lib/warning\"));\n\n var _default = function _default(file, acceptedFiles) {\n   if (file && acceptedFiles) {\n     var acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(',');\n     var fileName = file.name || '';\n     var mimeType = file.type || '';\n     var baseMimeType = mimeType.replace(/\\/.*$/, '');\n     return acceptedFilesArray.some(function (type) {\n       var validType = type.trim(); // This is something like */*,*  allow all files\n\n       if (/^\\*(\\/\\*)?$/.test(type)) {\n         return true;\n       } // like .jpg, .png\n\n\n       if (validType.charAt(0) === '.') {\n         var lowerFileName = fileName.toLowerCase();\n         var lowerType = validType.toLowerCase();\n         var affixList = [lowerType];\n\n         if (lowerType === '.jpg' || lowerType === '.jpeg') {\n           affixList = ['.jpg', '.jpeg'];\n         }\n\n         return affixList.some(function (affix) {\n           return lowerFileName.endsWith(affix);\n         });\n       } // This is something like a image/* mime type\n\n\n       if (/\\/\\*$/.test(validType)) {\n         return baseMimeType === validType.replace(/\\/.*$/, '');\n       } // Full match\n\n\n       if (mimeType === validType) {\n         return true;\n       } // Invalidate type should skip\n\n\n       if (/^\\w+$/.test(validType)) {\n         (0, _warning.default)(false, \"Upload takes an invalidate 'accept' type '\".concat(validType, \"'.Skip for check.\"));\n         return true;\n       }\n\n       return false;\n     });\n   }\n\n   return true;\n };\n\n exports.default = _default;\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n___esModule = module.exports.__esModule;\n_default0 = module.exports.default;\n\n}, () => ({\n  '@babel/runtime/helpers/interopRequireDefault': _req,\n  'rc-util/lib/warning': _req0,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}